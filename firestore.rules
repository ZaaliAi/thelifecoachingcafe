rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has the 'admin' role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if a user has the 'coach' role
    function isCoach() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coach';
    }

    // Rule for user profiles
    match /users/{userId} {
      // Allow reading a profile if:
      // 1. It's an approved coach profile (for the public "Browse Coaches" page)
      // 2. You are the owner of the profile (for your own dashboard)
      // 3. You are an admin
      allow read: if (resource.data.role == 'coach' && resource.data.status == 'approved') || isOwner(userId) || isAdmin();
      
      // Allow writing to a profile if:
      // 1. You are the owner (so coaches can update their own profiles)
      // 2. You are an admin
      allow write: if isOwner(userId) || isAdmin();
    }

    // Rule for blog posts
    match /blogs/{blogId} {
      // Allow public to read posts only if they are "published"
      allow read: if resource.data.status == 'published';

      // Only allow a user to create a blog post if they are a coach
      allow create: if isCoach();
      
      // Allow updating or deleting a post if:
      // 1. You are the author of the post
      // 2. You are an admin
      allow update, delete: if request.auth.uid == resource.data.authorId || isAdmin();
    }

    // Rule for messages
    match /messages/{messageId} {
      // Allow reading or creating a message if:
      // 1. You are the sender or recipient
      // 2. You are an admin (for the message logs)
      allow read, create: if request.auth.uid == request.resource.data.senderId || request.auth.uid == request.resource.data.recipientId || isAdmin();
      
      // Allow updating a message only if you are the recipient marking it as "read"
      allow update: if request.auth.uid == resource.data.recipientId && request.resource.data.read == true;
    }

    // Allow public read access to products for the pricing page
    match /products/{productId} {
      allow read: if true;

      // Public can also read the prices nested under a product
      match /prices/{priceId} {
        allow read: if true;
      }
    }
  }
}