rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Blog posts: Public read, only authenticated users can write
    match /posts/{postId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // User profiles: Public read, user can write their own profile, admin can write any profile
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null &&
                      (request.auth.uid == userId ||
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Messages: Only sender can create, sender or recipient can read
    match /messages/{messageId} {
      allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid;
      allow read: if request.auth != null &&
        (resource.data.senderId == request.auth.uid ||
         resource.data.recipientId == request.auth.uid);
      // Allow the recipient to update a message (e.g., to mark as read)
      allow update: if request.auth != null && request.resource.data.recipientId == request.auth.uid;
    }

    // Conversations: Only members can create/read/update, no delete
    match /conversations/{conversationId} {
      allow create: if request.auth != null &&
 request.resource.data.members != null &&
        request.auth.uid in request.resource.data.members &&
 (conversationId.split('_')[0] == request.auth.uid || conversationId.split('_')[1] == request.auth.uid);
      allow update: if request.auth != null &&
        resource.data.members != null &&
        request.auth.uid in resource.data.members;
      allow read: if request.auth != null &&
        resource.data.members != null &&
        request.auth.uid in resource.data.members;
      allow delete: if false;
    }

    // Blogs: (if you use /blogs/{blogId})
    match /blogs/{blogId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Add other collections here as needed...
  }
}