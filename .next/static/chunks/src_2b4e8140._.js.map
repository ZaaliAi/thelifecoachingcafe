{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/messageService.ts"],"sourcesContent":["// \"use client\"; // <-- REMOVED THIS LINE\n\nimport {\n  collection,\n  doc,\n  addDoc,\n  query,\n  orderBy,\n  getDocs,\n  serverTimestamp,\n  where,\n  Timestamp,\n  updateDoc,\n  setDoc,\n  getDoc,\n  limit,\n  writeBatch\n} from \"firebase/firestore\";\nimport { db, auth } from \"./firebase\"; \nimport { getUserProfile } from \"./firestore\";\nimport type { Message, FirestoreMessage, Conversation, FirestoreUserProfile } from '@/types';\n\n// Helper to map FirestoreMessage to Message\nconst mapMessageFromFirestore = (\n  docData: any, \n  id: string,\n  defaultSenderName?: string | null, \n  defaultRecipientName?: string | null\n): Message => {\n  const data = docData as Omit<FirestoreMessage, 'id' | 'timestamp'> & { timestamp: Timestamp; conversationId?: string }; \n  return {\n    id,\n    senderId: data.senderId,\n    recipientId: data.recipientId,\n    content: data.content,\n    timestamp: data.timestamp.toDate().toISOString(),\n    read: data.read || false,\n    senderName: defaultSenderName || data.senderName || \"Unknown User\", // MODIFIED FALLBACK\n    recipientName: defaultRecipientName || data.recipientName || \"Unknown User\", // MODIFIED FALLBACK\n    conversationId: data.conversationId || \"\",\n  };\n};\n\nexport const sendMessageToFirestore = async (\n  senderId: string,\n  recipientId: string,\n  content: string,\n  senderName: string, \n  recipientName: string\n): Promise<string> => {\n  console.log(\"sendMessageToFirestore called!\");\n  console.log(\"Arguments:\", { senderId, recipientId, content, senderName, recipientName });\n  try {\n    const conversationId = await getOrCreateConversation(senderId, recipientId);\n\n    const messagesColRef = collection(db, \"messages\"); \n    const messageDoc: Omit<FirestoreMessage, 'id'> & { conversationId: string } = {\n      senderId,\n      recipientId,\n      content,\n      timestamp: serverTimestamp() as Timestamp,\n      senderName,\n      recipientName,\n      read: false,\n      conversationId,\n    };\n\n    console.log(\"Message doc:\", messageDoc);\n    const messageDocRef = await addDoc(messagesColRef, messageDoc);\n    const conversationDocRef = doc(db, \"conversations\", conversationId);\n    await updateDoc(conversationDocRef, {\n      lastMessage: content,\n      lastMessageSenderId: senderId,\n      updatedAt: serverTimestamp(),\n    });\n    return messageDocRef.id;\n  } catch (error) {\n    console.error(\"Error sending message:\", error);\n    throw error;\n  }\n};\n\nexport const fetchConversationMessages = async (\n  conversationId: string,\n  userId: string\n): Promise<Message[]> => {\n  if (!conversationId || !userId) {\n    console.warn(\"[fetchConversationMessages] No conversationId or userId provided.\");\n    return [];\n  }\n  const messagesRef = collection(db, \"messages\");\n\n  const sentQuery = query(\n    messagesRef,\n    where(\"conversationId\", \"==\", conversationId),\n    where(\"senderId\", \"==\", userId),\n    orderBy(\"timestamp\", \"asc\")\n  );\n\n  const receivedQuery = query(\n    messagesRef,\n    where(\"conversationId\", \"==\", conversationId),\n    where(\"recipientId\", \"==\", userId),\n    orderBy(\"timestamp\", \"asc\")\n  );\n\n  const [sentSnap, receivedSnap] = await Promise.all([\n    getDocs(sentQuery),\n    getDocs(receivedQuery)\n  ]);\n\n  const allMessagesMap = new Map<string, Message>();\n  const processSnap = async (snap: any) => {\n    for (const doc of snap.docs) {\n      const data = doc.data();\n      let senderNameToUse = data.senderName;\n      let recipientNameToUse = data.recipientName;\n\n      if (data.senderId && (senderNameToUse === data.senderId || !senderNameToUse)) {\n          const profile = await getUserProfile(data.senderId);\n          senderNameToUse = profile?.name || profile?.displayName || \"Unknown User\"; // MODIFIED FALLBACK\n      }\n      if (data.recipientId && (recipientNameToUse === data.recipientId || !recipientNameToUse)) {\n          const profile = await getUserProfile(data.recipientId);\n          recipientNameToUse = profile?.name || profile?.displayName || \"Unknown User\"; // MODIFIED FALLBACK\n      }\n      allMessagesMap.set(doc.id, mapMessageFromFirestore(data, doc.id, senderNameToUse, recipientNameToUse));\n    }\n  };\n  await Promise.all([processSnap(sentSnap), processSnap(receivedSnap)]);\n\n  return Array.from(allMessagesMap.values()).sort(\n    (a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime()\n  );\n};\n\nexport const getOrCreateConversation = async (userId1: string, userId2: string): Promise<string> => {\n  if (userId1 === userId2) {\n    throw new Error(\"Cannot create a conversation with oneself.\");\n  }\n  const members = [userId1, userId2].sort();\n  const conversationId = members.join('_'); \n  const conversationDocRef = doc(db, \"conversations\", conversationId);\n\n  try {\n    const docSnap = await getDoc(conversationDocRef);\n    if (docSnap.exists()) {\n      return conversationId;\n    } else {\n      const user1Profile = await getUserProfile(userId1);\n      const user2Profile = await getUserProfile(userId2);\n      await setDoc(conversationDocRef, {\n        members,\n        memberNames: [user1Profile?.name || user1Profile?.displayName || \"Unknown User\", user2Profile?.name || user2Profile?.displayName || \"Unknown User\"], // MODIFIED FALLBACK\n        memberAvatars: [user1Profile?.profileImageUrl || null, user2Profile?.profileImageUrl || null],\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n        lastMessage: \"\", \n      });\n      return conversationId;\n    }\n  } catch (error) {\n    console.error(\"Error in getOrCreateConversation:\", error);\n    const docSnapRetry = await getDoc(conversationDocRef); \n    if (docSnapRetry.exists()) return conversationId;\n    throw new Error(\"Failed to get or create conversation.\");\n  }\n};\n\nexport const getUserConversations = async (userId: string): Promise<Conversation[]> => {\n  try {\n    const conversationsColRef = collection(db, \"conversations\");\n    const q = query(conversationsColRef, where(\"members\", \"array-contains\", userId), orderBy(\"updatedAt\", \"desc\"));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      const memberNames = (data.memberNames || []).map((name: string, index: number) => \n        name || (data.members && data.members[index] ? \"Unknown User\" : \"Unknown User\") // MODIFIED FALLBACK\n      );\n      return {\n        id: docSnap.id,\n        members: data.members,\n        memberNames: memberNames,\n        memberAvatars: data.memberAvatars,\n        lastMessage: data.lastMessage || \"\",\n        updatedAt: (data.updatedAt as Timestamp)?.toDate() || new Date(),\n        createdAt: (data.createdAt as Timestamp)?.toDate() || new Date(),\n        lastMessageSenderId: data.lastMessageSenderId,\n      } as Conversation;\n    });\n  } catch (error) {\n    console.error(\"Error fetching user conversations:\", error);\n    throw new Error(\"Failed to fetch user conversations.\");\n  }\n};\n\nexport const fetchReceivedMessages = async (): Promise<Message[]> => {\n  if (!auth.currentUser) return [];\n  const messagesRef = collection(db, \"messages\"); \n  const q = query(messagesRef, where(\"recipientId\", \"==\", auth.currentUser.uid), orderBy(\"timestamp\", \"desc\"));\n  const snapshot = await getDocs(q);\n  return Promise.all(snapshot.docs.map(async (doc) => {\n    const data = doc.data(); \n    let senderName = data.senderName;\n    if (data.senderId && (senderName === data.senderId || !senderName)) {\n      const profile = await getUserProfile(data.senderId);\n      senderName = profile?.name || profile?.displayName || \"Unknown User\"; // MODIFIED FALLBACK\n    }\n    return mapMessageFromFirestore(data, doc.id, senderName, data.recipientName); \n  }));\n};\n\nexport const getMessagesForUserOrCoach = async (userId: string, messageLimit: number = 50): Promise<Message[]> => {\n  if (!userId) {\n    console.warn(\"[getMessagesForUserOrCoach] No userId provided.\");\n    return [];\n  }\n  const messagesRef = collection(db, \"messages\");\n  const sentMessagesQuery = query(messagesRef, where(\"senderId\", \"==\", userId),orderBy(\"timestamp\", \"desc\"),limit(messageLimit));\n  const receivedMessagesQuery = query(messagesRef, where(\"recipientId\", \"==\", userId),orderBy(\"timestamp\", \"desc\"),limit(messageLimit));\n  try {\n    const [sentSnapshot, receivedSnapshot] = await Promise.all([getDocs(sentMessagesQuery),getDocs(receivedMessagesQuery)]);\n    const allMessagesMap = new Map<string, Message>();\n    for (const docSnap of sentSnapshot.docs) {\n      const data = docSnap.data();\n      let recipientName = data.recipientName;\n      if (data.recipientId && (recipientName === data.recipientId || !recipientName)) {\n        const profile = await getUserProfile(data.recipientId);\n        recipientName = profile?.name || profile?.displayName || \"Unknown User\"; // MODIFIED FALLBACK\n      }\n      allMessagesMap.set(docSnap.id, mapMessageFromFirestore(data, docSnap.id, data.senderName, recipientName));\n    }\n    for (const docSnap of receivedSnapshot.docs) {\n      const data = docSnap.data();\n      let senderName = data.senderName;\n      if (data.senderId && (senderName === data.senderId || !senderName)) {\n        const profile = await getUserProfile(data.senderId);\n        senderName = profile?.name || profile?.displayName || \"Unknown User\"; // MODIFIED FALLBACK\n      }\n      if (!allMessagesMap.has(docSnap.id)) {\n         allMessagesMap.set(docSnap.id, mapMessageFromFirestore(data, docSnap.id, senderName, data.recipientName));\n      }\n    }\n    const combinedMessages = Array.from(allMessagesMap.values());\n    combinedMessages.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n    return combinedMessages.slice(0, messageLimit);\n  } catch (error) {\n    console.error(\"[getMessagesForUserOrCoach] Error fetching messages:\", error);\n    throw error; \n  }\n};\n\nexport const getSpecificConversationMessages = async (userId1: string, userId2: string, messageLimit: number = 50): Promise<Message[]> => {\n  if (!userId1 || !userId2) {\n    console.warn(\"[getSpecificConversationMessages] Both user IDs must be provided.\");\n    return [];\n  }\n  const conversationId = [userId1, userId2].sort().join('_');\n  return fetchConversationMessages(conversationId, userId1); // Relies on fetchConversationMessages updates\n};\n\nexport const markMessagesAsRead = async (messageIdsToMark: string[], currentUserId: string): Promise<void> => {\n  if (!messageIdsToMark || messageIdsToMark.length === 0) {\n    return;\n  }\n  if (!currentUserId) {\n    console.warn(\"[markMessagesAsRead] currentUserId not provided.\");\n    return;\n  }\n  const batch = writeBatch(db);\n  let actuallyMarkedCount = 0;\n\n  for (const messageId of messageIdsToMark) {\n    const messageRef = doc(db, \"messages\", messageId);\n    try {\n      const messageSnap = await getDoc(messageRef);\n      if (messageSnap.exists()) {\n        const messageData = messageSnap.data() as FirestoreMessage;\n        if (messageData.recipientId === currentUserId && !(messageData as any).read) {\n          batch.update(messageRef, { read: true });\n          actuallyMarkedCount++;\n        }\n      }\n    } catch (error) {\n      console.error(`[markMessagesAsRead] Error fetching message ${messageId} for verification:`, error);\n    }\n  }\n\n  if (actuallyMarkedCount > 0) {\n    try {\n      await batch.commit();\n    } catch (error) {\n      console.error(\"[markMessagesAsRead] Error committing batch to mark messages as read:\", error);\n      throw error; \n    }\n  }\n};\n"],"names":[],"mappings":"AAAA,yCAAyC;;;;;;;;;;;AAEzC;AAAA;AAgBA;AACA;;;;AAGA,4CAA4C;AAC5C,MAAM,0BAA0B,CAC9B,SACA,IACA,mBACA;IAEA,MAAM,OAAO;IACb,OAAO;QACL;QACA,UAAU,KAAK,QAAQ;QACvB,aAAa,KAAK,WAAW;QAC7B,SAAS,KAAK,OAAO;QACrB,WAAW,KAAK,SAAS,CAAC,MAAM,GAAG,WAAW;QAC9C,MAAM,KAAK,IAAI,IAAI;QACnB,YAAY,qBAAqB,KAAK,UAAU,IAAI;QACpD,eAAe,wBAAwB,KAAK,aAAa,IAAI;QAC7D,gBAAgB,KAAK,cAAc,IAAI;IACzC;AACF;AAEO,MAAM,yBAAyB,OACpC,UACA,aACA,SACA,YACA;IAEA,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,cAAc;QAAE;QAAU;QAAa;QAAS;QAAY;IAAc;IACtF,IAAI;QACF,MAAM,iBAAiB,MAAM,wBAAwB,UAAU;QAE/D,MAAM,iBAAiB,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE;QACtC,MAAM,aAAwE;YAC5E;YACA;YACA;YACA,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;YACzB;YACA;YACA,MAAM;YACN;QACF;QAEA,QAAQ,GAAG,CAAC,gBAAgB;QAC5B,MAAM,gBAAgB,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB;QACnD,MAAM,qBAAqB,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,iBAAiB;QACpD,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,oBAAoB;YAClC,aAAa;YACb,qBAAqB;YACrB,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;QAC3B;QACA,OAAO,cAAc,EAAE;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,MAAM;IACR;AACF;AAEO,MAAM,4BAA4B,OACvC,gBACA;IAEA,IAAI,CAAC,kBAAkB,CAAC,QAAQ;QAC9B,QAAQ,IAAI,CAAC;QACb,OAAO,EAAE;IACX;IACA,MAAM,cAAc,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE;IAEnC,MAAM,YAAY,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EACpB,aACA,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,kBAAkB,MAAM,iBAC9B,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,YAAY,MAAM,SACxB,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,aAAa;IAGvB,MAAM,gBAAgB,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EACxB,aACA,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,kBAAkB,MAAM,iBAC9B,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,eAAe,MAAM,SAC3B,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,aAAa;IAGvB,MAAM,CAAC,UAAU,aAAa,GAAG,MAAM,QAAQ,GAAG,CAAC;QACjD,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;QACR,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;KACT;IAED,MAAM,iBAAiB,IAAI;IAC3B,MAAM,cAAc,OAAO;QACzB,KAAK,MAAM,OAAO,KAAK,IAAI,CAAE;YAC3B,MAAM,OAAO,IAAI,IAAI;YACrB,IAAI,kBAAkB,KAAK,UAAU;YACrC,IAAI,qBAAqB,KAAK,aAAa;YAE3C,IAAI,KAAK,QAAQ,IAAI,CAAC,oBAAoB,KAAK,QAAQ,IAAI,CAAC,eAAe,GAAG;gBAC1E,MAAM,UAAU,MAAM,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,QAAQ;gBAClD,kBAAkB,SAAS,QAAQ,SAAS,eAAe,gBAAgB,oBAAoB;YACnG;YACA,IAAI,KAAK,WAAW,IAAI,CAAC,uBAAuB,KAAK,WAAW,IAAI,CAAC,kBAAkB,GAAG;gBACtF,MAAM,UAAU,MAAM,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,WAAW;gBACrD,qBAAqB,SAAS,QAAQ,SAAS,eAAe,gBAAgB,oBAAoB;YACtG;YACA,eAAe,GAAG,CAAC,IAAI,EAAE,EAAE,wBAAwB,MAAM,IAAI,EAAE,EAAE,iBAAiB;QACpF;IACF;IACA,MAAM,QAAQ,GAAG,CAAC;QAAC,YAAY;QAAW,YAAY;KAAc;IAEpE,OAAO,MAAM,IAAI,CAAC,eAAe,MAAM,IAAI,IAAI,CAC7C,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;AAE7E;AAEO,MAAM,0BAA0B,OAAO,SAAiB;IAC7D,IAAI,YAAY,SAAS;QACvB,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,UAAU;QAAC;QAAS;KAAQ,CAAC,IAAI;IACvC,MAAM,iBAAiB,QAAQ,IAAI,CAAC;IACpC,MAAM,qBAAqB,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,iBAAiB;IAEpD,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;QAC7B,IAAI,QAAQ,MAAM,IAAI;YACpB,OAAO;QACT,OAAO;YACL,MAAM,eAAe,MAAM,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD,EAAE;YAC1C,MAAM,eAAe,MAAM,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD,EAAE;YAC1C,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,oBAAoB;gBAC/B;gBACA,aAAa;oBAAC,cAAc,QAAQ,cAAc,eAAe;oBAAgB,cAAc,QAAQ,cAAc,eAAe;iBAAe;gBACnJ,eAAe;oBAAC,cAAc,mBAAmB;oBAAM,cAAc,mBAAmB;iBAAK;gBAC7F,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;gBACzB,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;gBACzB,aAAa;YACf;YACA,OAAO;QACT;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,MAAM,eAAe,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;QAClC,IAAI,aAAa,MAAM,IAAI,OAAO;QAClC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,MAAM,uBAAuB,OAAO;IACzC,IAAI;QACF,MAAM,sBAAsB,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE;QAC3C,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,qBAAqB,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,WAAW,kBAAkB,SAAS,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,aAAa;QACtG,MAAM,gBAAgB,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;QACpC,OAAO,cAAc,IAAI,CAAC,GAAG,CAAC,CAAA;YAC5B,MAAM,OAAO,QAAQ,IAAI;YACzB,MAAM,cAAc,CAAC,KAAK,WAAW,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,MAAc,QAC9D,QAAQ,CAAC,KAAK,OAAO,IAAI,KAAK,OAAO,CAAC,MAAM,GAAG,iBAAiB,cAAc,EAAE,oBAAoB;;YAEtG,OAAO;gBACL,IAAI,QAAQ,EAAE;gBACd,SAAS,KAAK,OAAO;gBACrB,aAAa;gBACb,eAAe,KAAK,aAAa;gBACjC,aAAa,KAAK,WAAW,IAAI;gBACjC,WAAW,AAAC,KAAK,SAAS,EAAgB,YAAY,IAAI;gBAC1D,WAAW,AAAC,KAAK,SAAS,EAAgB,YAAY,IAAI;gBAC1D,qBAAqB,KAAK,mBAAmB;YAC/C;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QACpD,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,MAAM,wBAAwB;IACnC,IAAI,CAAC,yHAAA,CAAA,OAAI,CAAC,WAAW,EAAE,OAAO,EAAE;IAChC,MAAM,cAAc,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE;IACnC,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,aAAa,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,eAAe,MAAM,yHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,aAAa;IACpG,MAAM,WAAW,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;IAC/B,OAAO,QAAQ,GAAG,CAAC,SAAS,IAAI,CAAC,GAAG,CAAC,OAAO;QAC1C,MAAM,OAAO,IAAI,IAAI;QACrB,IAAI,aAAa,KAAK,UAAU;QAChC,IAAI,KAAK,QAAQ,IAAI,CAAC,eAAe,KAAK,QAAQ,IAAI,CAAC,UAAU,GAAG;YAClE,MAAM,UAAU,MAAM,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,QAAQ;YAClD,aAAa,SAAS,QAAQ,SAAS,eAAe,gBAAgB,oBAAoB;QAC5F;QACA,OAAO,wBAAwB,MAAM,IAAI,EAAE,EAAE,YAAY,KAAK,aAAa;IAC7E;AACF;AAEO,MAAM,4BAA4B,OAAO,QAAgB,eAAuB,EAAE;IACvF,IAAI,CAAC,QAAQ;QACX,QAAQ,IAAI,CAAC;QACb,OAAO,EAAE;IACX;IACA,MAAM,cAAc,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE;IACnC,MAAM,oBAAoB,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,aAAa,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,YAAY,MAAM,SAAQ,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,aAAa,SAAQ,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE;IAChH,MAAM,wBAAwB,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,aAAa,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,eAAe,MAAM,SAAQ,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,aAAa,SAAQ,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE;IACvH,IAAI;QACF,MAAM,CAAC,cAAc,iBAAiB,GAAG,MAAM,QAAQ,GAAG,CAAC;YAAC,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;YAAmB,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;SAAuB;QACtH,MAAM,iBAAiB,IAAI;QAC3B,KAAK,MAAM,WAAW,aAAa,IAAI,CAAE;YACvC,MAAM,OAAO,QAAQ,IAAI;YACzB,IAAI,gBAAgB,KAAK,aAAa;YACtC,IAAI,KAAK,WAAW,IAAI,CAAC,kBAAkB,KAAK,WAAW,IAAI,CAAC,aAAa,GAAG;gBAC9E,MAAM,UAAU,MAAM,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,WAAW;gBACrD,gBAAgB,SAAS,QAAQ,SAAS,eAAe,gBAAgB,oBAAoB;YAC/F;YACA,eAAe,GAAG,CAAC,QAAQ,EAAE,EAAE,wBAAwB,MAAM,QAAQ,EAAE,EAAE,KAAK,UAAU,EAAE;QAC5F;QACA,KAAK,MAAM,WAAW,iBAAiB,IAAI,CAAE;YAC3C,MAAM,OAAO,QAAQ,IAAI;YACzB,IAAI,aAAa,KAAK,UAAU;YAChC,IAAI,KAAK,QAAQ,IAAI,CAAC,eAAe,KAAK,QAAQ,IAAI,CAAC,UAAU,GAAG;gBAClE,MAAM,UAAU,MAAM,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,QAAQ;gBAClD,aAAa,SAAS,QAAQ,SAAS,eAAe,gBAAgB,oBAAoB;YAC5F;YACA,IAAI,CAAC,eAAe,GAAG,CAAC,QAAQ,EAAE,GAAG;gBAClC,eAAe,GAAG,CAAC,QAAQ,EAAE,EAAE,wBAAwB,MAAM,QAAQ,EAAE,EAAE,YAAY,KAAK,aAAa;YAC1G;QACF;QACA,MAAM,mBAAmB,MAAM,IAAI,CAAC,eAAe,MAAM;QACzD,iBAAiB,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;QAC/F,OAAO,iBAAiB,KAAK,CAAC,GAAG;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wDAAwD;QACtE,MAAM;IACR;AACF;AAEO,MAAM,kCAAkC,OAAO,SAAiB,SAAiB,eAAuB,EAAE;IAC/G,IAAI,CAAC,WAAW,CAAC,SAAS;QACxB,QAAQ,IAAI,CAAC;QACb,OAAO,EAAE;IACX;IACA,MAAM,iBAAiB;QAAC;QAAS;KAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IACtD,OAAO,0BAA0B,gBAAgB,UAAU,8CAA8C;AAC3G;AAEO,MAAM,qBAAqB,OAAO,kBAA4B;IACnE,IAAI,CAAC,oBAAoB,iBAAiB,MAAM,KAAK,GAAG;QACtD;IACF;IACA,IAAI,CAAC,eAAe;QAClB,QAAQ,IAAI,CAAC;QACb;IACF;IACA,MAAM,QAAQ,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE;IAC3B,IAAI,sBAAsB;IAE1B,KAAK,MAAM,aAAa,iBAAkB;QACxC,MAAM,aAAa,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,YAAY;QACvC,IAAI;YACF,MAAM,cAAc,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;YACjC,IAAI,YAAY,MAAM,IAAI;gBACxB,MAAM,cAAc,YAAY,IAAI;gBACpC,IAAI,YAAY,WAAW,KAAK,iBAAiB,CAAC,AAAC,YAAoB,IAAI,EAAE;oBAC3E,MAAM,MAAM,CAAC,YAAY;wBAAE,MAAM;oBAAK;oBACtC;gBACF;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,4CAA4C,EAAE,UAAU,kBAAkB,CAAC,EAAE;QAC9F;IACF;IAEA,IAAI,sBAAsB,GAAG;QAC3B,IAAI;YACF,MAAM,MAAM,MAAM;QACpB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yEAAyE;YACvF,MAAM;QACR;IACF;AACF","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/user/page.tsx"],"sourcesContent":["\"use client\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport { MessageSquare, UserCircle, Search, Loader2 } from \"lucide-react\";\nimport { useAuth } from \"@/lib/auth\";\nimport { useEffect, useState } from \"react\";\nimport { getMessagesForUserOrCoach } from \"@/lib/messageService\"; // Import the message service function\n\nexport default function UserDashboardPage() {\n  const { user, loading } = useAuth();\n  const [userName, setUserName] = useState(\"Valued User\");\n  const [unreadMessageCount, setUnreadMessageCount] = useState(0); // Renamed for clarity\n  const [isLoadingMessages, setIsLoadingMessages] = useState(true);\n\n  useEffect(() => {\n    if (user) {\n      setUserName(user.name || user.email?.split('@')[0] || \"User\");\n\n      const fetchUnreadMessages = async () => {\n        setIsLoadingMessages(true);\n        try {\n          // Fetch all messages for the user (sent and received)\n          const allMessages = await getMessagesForUserOrCoach(user.id);\n          \n          // Calculate the number of unread messages where the current user is the recipient\n          const unreadCount = allMessages.filter(\n            (msg) => msg.recipientId === user.id && !msg.read\n          ).length;\n          \n          setUnreadMessageCount(unreadCount);\n        } catch (error) {\n          console.error(\"Failed to fetch unread messages for dashboard:\", error);\n          setUnreadMessageCount(0); // Set to 0 on error\n        } finally {\n          setIsLoadingMessages(false);\n        }\n      };\n\n      fetchUnreadMessages();\n    }\n  }, [user]); // Rerun effect when user changes\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[calc(100vh-200px)]\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n      </div>\n    );\n  }\n  \n  if (!user) {\n    // This should ideally be handled by the DashboardLayout redirecting to /login\n    return <p>Please log in to view your dashboard.</p>;\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-3xl\">Welcome, {userName}!</CardTitle>\n          <CardDescription>This is your personal dashboard. Manage your interactions and find your ideal coach.</CardDescription>\n        </CardHeader>\n      </Card>\n\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n        <Card className=\"hover:shadow-lg transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">My Profile</CardTitle>\n            <UserCircle className=\"h-5 w-5 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">View & Edit</div>\n            <p className=\"text-xs text-muted-foreground\">Keep your information up to date and update your profile.</p>\n            <Button asChild className=\"mt-4 w-full bg-orange-500 text-white hover:bg-orange-600\">\n              <Link href=\"/dashboard/user/settings\">Go to Profile</Link>\n            </Button>\n          </CardContent>\n        </Card>\n\n        {/* Messages Card */}\n        <Card className=\"hover:shadow-lg transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Messages</CardTitle>\n            <MessageSquare className=\"h-5 w-5 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {isLoadingMessages ? (\n              <div className=\"text-xl font-bold flex items-center\">\n                 <Loader2 className=\"mr-2 h-5 w-5 animate-spin text-muted-foreground\" /> Loading...\n              </div>\n            ) : (\n              <div className=\"text-2xl font-bold\">{unreadMessageCount} New Messages</div>\n            )}\n            <p className=\"text-xs text-muted-foreground\">Connect with coaches and review your conversations.</p>\n            <Button asChild className=\"mt-4 w-full bg-green-500 text-white hover:bg-green-600\">\n              <Link href=\"/dashboard/user/messages\">View Messages</Link>\n            </Button>\n          </CardContent>\n        </Card>\n        \n        {/* Find a New Coach Card - Styling adjusted previously */}\n        <Card className=\"hover:shadow-lg transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Find a New Coach</CardTitle>\n            <Search className=\"h-5 w-5 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">Explore Coaches</div>\n            <p className=\"text-xs text-muted-foreground\">Use CoachMatch AI to find your perfect match.</p>\n             <Button asChild className=\"mt-4 w-full\">\n              <Link href=\"/find-a-coach\">Search Coaches</Link>\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Activity Overview</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-muted-foreground\">Your recent searches and saved coaches will appear here (feature coming soon).</p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}