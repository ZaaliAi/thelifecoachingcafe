{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()], // Using default plugin configuration\n  model: 'googleai/gemini-1.5-flash-latest',\n});"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-coach-specialties.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Suggests relevant keywords and specialties based on a coach's bio.\n *\n * - suggestCoachSpecialties - A function that handles the suggestion of coach specialties.\n * - SuggestCoachSpecialtiesInput - The input type for the suggestCoachSpecialties function.\n * - SuggestCoachSpecialtiesOutput - The return type for the suggestCoachSpecialties function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestCoachSpecialtiesInputSchema = z.object({\n  bio: z.string().describe('The bio of the coach.'),\n});\nexport type SuggestCoachSpecialtiesInput = z.infer<\n  typeof SuggestCoachSpecialtiesInputSchema\n>;\n\nconst SuggestCoachSpecialtiesOutputSchema = z.object({\n  keywords: z.array(z.string()).describe('A list of 3-5 concise and relevant keywords derived from the bio, suitable for search and tagging.'),\n  specialties: z\n    .array(z.string())\n    .describe('A list of 2-4 coach specialties derived directly from the services or approaches described in the bio.'),\n});\nexport type SuggestCoachSpecialtiesOutput = z.infer<\n  typeof SuggestCoachSpecialtiesOutputSchema\n>;\n\nexport async function suggestCoachSpecialties(\n  input: SuggestCoachSpecialtiesInput\n): Promise<SuggestCoachSpecialtiesOutput> {\n  console.log(\"AI Flow: suggestCoachSpecialties called with bio:\", input.bio.substring(0, 100) + \"...\");\n  const result = await suggestCoachSpecialtiesFlow(input);\n  console.log(\"AI Flow: suggestCoachSpecialties result:\", result);\n  return result;\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestCoachSpecialtiesPrompt',\n  input: {schema: SuggestCoachSpecialtiesInputSchema},\n  output: {schema: SuggestCoachSpecialtiesOutputSchema},\n  prompt: `You are an AI assistant helping life coaches enhance their profiles by analyzing their biography.\n\nCoach's Biography:\n\"{{{bio}}}\"\n\nBased *solely and exclusively* on the provided Coach's Biography above:\n1. Identify and suggest a list of 3-5 concise and relevant \"keywords\" that accurately reflect the main themes, skills, or target audience mentioned *in the bio*. These keywords should be suitable for search and tagging. Do not invent keywords not supported by the text.\n2. Identify and suggest a list of 2-4 \"specialties\" that the coach seems to focus on, derived *directly* from the services, problems solved, or approaches described *in the bio*. Do not invent specialties not supported by the text.\n\nYour entire response MUST be a single, valid JSON object matching the output schema, containing a 'keywords' array of strings and a 'specialties' array of strings.\nExample of expected JSON output format if the bio discussed career changes and leadership:\n{\n  \"keywords\": [\"career transition\", \"leadership development\", \"executive presence\", \"public speaking\"],\n  \"specialties\": [\"Career Coaching\", \"Executive Coaching\", \"Communication Skills\"]\n}\nIf the bio is too short or uninformative to derive meaningful keywords or specialties, return empty arrays for both. Ensure your response is only the JSON object and nothing else.`,\n});\n\nconst suggestCoachSpecialtiesFlow = ai.defineFlow(\n  {\n    name: 'suggestCoachSpecialtiesFlow',\n    inputSchema: SuggestCoachSpecialtiesInputSchema,\n    outputSchema: SuggestCoachSpecialtiesOutputSchema,\n  },\n  async input => {\n    console.log(\"suggestCoachSpecialtiesFlow: Input bio:\", input.bio.substring(0, 100) + \"...\");\n    const {output, usage} = await prompt(input);\n    console.log(\"suggestCoachSpecialtiesFlow: Raw LLM output:\", output);\n    console.log(\"suggestCoachSpecialtiesFlow: LLM usage:\", usage);\n\n    if (!output || !output.keywords || !output.specialties) {\n        console.warn(\"AI suggestion flow returned malformed or incomplete output for bio:\", input.bio.substring(0,50) + \"...\");\n        return { keywords: [], specialties: [] };\n    }\n    // Ensure results are arrays, even if empty\n    const keywords = Array.isArray(output.keywords) ? output.keywords.filter(k => typeof k === 'string' && k.trim() !== \"\") : [];\n    const specialties = Array.isArray(output.specialties) ? output.specialties.filter(s => typeof s === 'string' && s.trim() !== \"\") : [];\n\n    return { keywords, specialties };\n  }\n);\n\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,KAAK,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC3B;AAKA,MAAM,sCAAsC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnD,UAAU,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IACvC,aAAa,uIAAA,CAAA,IAAC,CACX,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAKO,eAAe,wBACpB,KAAmC;IAEnC,QAAQ,GAAG,CAAC,qDAAqD,MAAM,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO;IAC/F,MAAM,SAAS,MAAM,4BAA4B;IACjD,QAAQ,GAAG,CAAC,4CAA4C;IACxD,OAAO;AACT;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAkC;IAClD,QAAQ;QAAC,QAAQ;IAAmC;IACpD,QAAQ,CAAC;;;;;;;;;;;;;;;mLAewK,CAAC;AACpL;AAEA,MAAM,8BAA8B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC/C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,QAAQ,GAAG,CAAC,2CAA2C,MAAM,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO;IACrF,MAAM,EAAC,MAAM,EAAE,KAAK,EAAC,GAAG,MAAM,OAAO;IACrC,QAAQ,GAAG,CAAC,gDAAgD;IAC5D,QAAQ,GAAG,CAAC,2CAA2C;IAEvD,IAAI,CAAC,UAAU,CAAC,OAAO,QAAQ,IAAI,CAAC,OAAO,WAAW,EAAE;QACpD,QAAQ,IAAI,CAAC,uEAAuE,MAAM,GAAG,CAAC,SAAS,CAAC,GAAE,MAAM;QAChH,OAAO;YAAE,UAAU,EAAE;YAAE,aAAa,EAAE;QAAC;IAC3C;IACA,2CAA2C;IAC3C,MAAM,WAAW,MAAM,OAAO,CAAC,OAAO,QAAQ,IAAI,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAA,IAAK,OAAO,MAAM,YAAY,EAAE,IAAI,OAAO,MAAM,EAAE;IAC5H,MAAM,cAAc,MAAM,OAAO,CAAC,OAAO,WAAW,IAAI,OAAO,WAAW,CAAC,MAAM,CAAC,CAAA,IAAK,OAAO,MAAM,YAAY,EAAE,IAAI,OAAO,MAAM,EAAE;IAErI,OAAO;QAAE;QAAU;IAAY;AACjC;;;IApDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/register-coach/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {suggestCoachSpecialties as '4030c4b22ac054737b4e3926ee179246ca76c90d00'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/register-coach/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/register-coach/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/register-coach/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/register-coach/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/register-coach/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/register-coach/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}