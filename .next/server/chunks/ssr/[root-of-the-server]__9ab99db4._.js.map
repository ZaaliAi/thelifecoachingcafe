{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["// src/lib/firebase.ts\nimport { initializeApp, getApps, getApp, type FirebaseApp } from 'firebase/app';\nimport { getAuth, type Auth } from 'firebase/auth';\nimport { getFirestore, type Firestore } from 'firebase/firestore';\nimport { getStorage, type FirebaseStorage } from 'firebase/storage';\nimport { getFunctions, type Functions } from 'firebase/functions'; // Import getFunctions\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID, // Optional\n};\n\n// Initialize Firebase\nlet firebaseApp: FirebaseApp; // Changed 'app' to 'firebaseApp' for clarity and consistency\nlet authInstance: Auth;\nlet dbInstance: Firestore;\nlet storageInstance: FirebaseStorage;\nlet functionsInstance: Functions; // Added for Firebase Functions\n\nif (!getApps().length) {\n  firebaseApp = initializeApp(firebaseConfig);\n} else {\n  firebaseApp = getApp(); // Use getApp() if already initialized\n}\n\nauthInstance = getAuth(firebaseApp);\ndbInstance = getFirestore(firebaseApp);\nstorageInstance = getStorage(firebaseApp);\nfunctionsInstance = getFunctions(firebaseApp); // Initialize Firebase Functions\n\nexport { \n  firebaseApp, // Export as firebaseApp\n  authInstance as auth, // Exporting as 'auth' for brevity if preferred, or 'authInstance'\n  dbInstance as db,     // Exporting as 'db'\n  storageInstance as storage, // Exporting as 'storage'\n  functionsInstance as functions // Export Firebase Functions\n};\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;;;;AACtB;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA,0TAAmE,sBAAsB;AAAzF;;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,eAAe,QAAQ,GAAG,CAAC,mCAAmC;AAChE;AAEA,sBAAsB;AACtB,IAAI,aAA0B,6DAA6D;AAC3F,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI,mBAA8B,+BAA+B;AAEjE,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,cAAc,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAC9B,OAAO;IACL,cAAc,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,KAAK,sCAAsC;AAChE;AAEA,eAAe,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACvB,aAAa,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AAC1B,kBAAkB,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE;AAC7B,oBAAoB,CAAA,GAAA,0KAAA,CAAA,eAAY,AAAD,EAAE,cAAc,gCAAgC","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firestore.ts"],"sourcesContent":["import {\n  collection, doc, setDoc, getDoc, addDoc, query, orderBy, getDocs,\n  serverTimestamp, limit as firestoreLimit, updateDoc, where, deleteDoc, writeBatch, runTransaction, collectionGroup, getCountFromServer,\n  Timestamp, arrayUnion, arrayRemove, documentId // Changed FieldPath to documentId import\n} from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport type { FirestoreUserProfile, FirestoreBlogPost, Coach, BlogPost, UserRole, CoachStatus, Message as MessageType, FirestoreMessage } from '@/types';\n\n// --- Helper Function to Generate Conversation ID ---\nconst generateConversationId = (userId1: string, userId2: string): string => {\n  if (!userId1 || !userId2) {\n    console.error(\"[generateConversationId] One or both user IDs are undefined/empty. userId1:\", userId1, \"userId2:\", userId2);\n    return `error_invalid_user_ids_for_conv_id_${String(userId1)}_vs_${String(userId2)}`;\n  }\n  const ids = [userId1, userId2].sort();\n  return ids.join('_');\n};\n\n// --- Utility to remove undefined fields ---\nfunction pruneUndefined<T extends object>(obj: T): Partial<T> {\n  return Object.entries(obj)\n    .filter(([_, v]) => v !== undefined)\n    .reduce((acc, [k, v]) => ({ ...acc, [k]: v }), {}) as Partial<T>;\n}\n\n// --- Helper Functions for Data Mapping ---\nconst mapCoachFromFirestore = (docData: any, id: string): Coach => {\n  const data = docData as Omit<FirestoreUserProfile, 'id'> & { createdAt?: Timestamp, updatedAt?: Timestamp, status?: CoachStatus };\n  return {\n    id,\n    name: data.name || 'Unnamed Coach',\n    email: data.email,\n    bio: data.bio || 'No bio available.',\n    specialties: data.specialties || [],\n    keywords: data.keywords || [],\n    profileImageUrl: data.profileImageUrl === undefined ? null : data.profileImageUrl,\n    dataAiHint: data.dataAiHint,\n    certifications: data.certifications || [],\n    socialLinks: data.socialLinks || [],\n    location: data.location === undefined ? null : data.location,\n    availability: data.availability || [],\n    subscriptionTier: data.subscriptionTier || 'free',\n    status: data.status || 'pending_approval',\n    websiteUrl: data.websiteUrl === undefined ? null : data.websiteUrl,\n    introVideoUrl: data.introVideoUrl === undefined ? null : data.introVideoUrl,\n    createdAt: data.createdAt?.toDate().toISOString(),\n    updatedAt: data.updatedAt?.toDate().toISOString(),\n    dataSource: 'Firestore',\n    isFeaturedOnHomepage: data.isFeaturedOnHomepage || false,\n  };\n};\n\nconst mapBlogPostFromFirestore = (docData: any, id: string): BlogPost => {\n  const data = docData as Partial<FirestoreBlogPost>;\n  let createdAtString: string;\n  if (data.createdAt && typeof (data.createdAt as any).toDate === 'function') {\n    createdAtString = (data.createdAt as Timestamp).toDate().toISOString();\n  } else if (data.createdAt instanceof Date) {\n    createdAtString = data.createdAt.toISOString();\n  } else if (typeof data.createdAt === 'string') {\n    const parsedDate = new Date(data.createdAt);\n    if (!isNaN(parsedDate.getTime())) {\n      createdAtString = parsedDate.toISOString();\n    } else {\n      console.warn(`[mapBlogPostFromFirestore] Invalid date string for createdAt for post ID ${id}: \"${data.createdAt}\". Using current date as fallback.`);\n      createdAtString = new Date().toISOString();\n    }\n  } else {\n    console.warn(`[mapBlogPostFromFirestore] createdAt is missing or invalid for post ID ${id}. Using current date as fallback.`);\n    createdAtString = new Date().toISOString();\n  }\n  let updatedAtString: string | undefined = undefined;\n  if (data.updatedAt && typeof (data.updatedAt as any).toDate === 'function') {\n    updatedAtString = (data.updatedAt as Timestamp).toDate().toISOString();\n  } else if (data.updatedAt instanceof Date) {\n    updatedAtString = data.updatedAt.toISOString();\n  } else if (typeof data.updatedAt === 'string') {\n    const parsedDate = new Date(data.updatedAt);\n    if (!isNaN(parsedDate.getTime())) {\n      updatedAtString = parsedDate.toISOString();\n    } else {\n      console.warn(`[mapBlogPostFromFirestore] Invalid date string for updatedAt for post ID ${id}: \"${data.updatedAt}\".`);\n    }\n  }\n  return {\n    id,\n    slug: data.slug || id,\n    title: data.title || 'Untitled Post',\n    content: data.content || '',\n    excerpt: data.excerpt || '',\n    authorId: data.authorId || 'unknown_author',\n    authorName: data.authorName || 'Unknown Author',\n    createdAt: createdAtString,\n    updatedAt: updatedAtString,\n    status: data.status || 'draft',\n    tags: data.tags || [],\n    featuredImageUrl: data.featuredImageUrl === null ? undefined : (data.featuredImageUrl || undefined),\n    dataAiHint: data.dataAiHint,\n  };\n};\n\nconst mapMessageFromFirestore = (docData: any, id: string): MessageType => {\n  const data = docData as Partial<FirestoreMessage> & { senderId: string; recipientId: string; timestamp: Timestamp; };\n  let conversationId = data.conversationId;\n  if (!conversationId && data.senderId && data.recipientId) {\n    console.warn(`[mapMessageFromFirestore] Message ID ${id} is missing conversationId in Firestore. Generating fallback.`);\n    conversationId = generateConversationId(data.senderId, data.recipientId);\n  } else if (!conversationId) {\n    console.error(`[mapMessageFromFirestore] Message ID ${id} is missing conversationId AND senderId/recipientId, cannot generate fallback. Assigning problematic ID.`);\n    conversationId = `error_missing_conv_id_and_cannot_generate_${id}`;\n  }\n  return {\n    id,\n    conversationId: conversationId!,\n    senderId: data.senderId!,\n    senderName: data.senderName || 'Unknown Sender',\n    recipientId: data.recipientId!,\n    recipientName: data.recipientName || 'Unknown Recipient',\n    content: data.content || '',\n    timestamp: data.timestamp.toDate().toISOString(),\n    read: data.read || false,\n  };\n};\n\n// --- User Profile Functions ---\nexport async function setUserProfile(userId: string, profileData: Partial<Omit<FirestoreUserProfile, 'id'>>) {\n  if (!userId) throw new Error(\"User ID is required to set user profile.\");\n  const userDocRef = doc(db, \"users\", userId);\n  const userSnap = await getDoc(userDocRef);\n  const isCreating = !userSnap.exists();\n  const dataToSet: { [key: string]: any } = { ...profileData };\n\n  if (isCreating) {\n    if (!dataToSet.email || !dataToSet.role || !dataToSet.name) throw new Error(\"Essential fields (name, email, role) missing for new user profile.\");\n    dataToSet.createdAt = serverTimestamp();\n    dataToSet.profileImageUrl = dataToSet.profileImageUrl ?? null;\n    dataToSet.enableNotifications = dataToSet.enableNotifications ?? true; // Default for new users\n    dataToSet.favoriteCoachIds = dataToSet.favoriteCoachIds ?? []; // Initialize favoriteCoachIds\n\n    if (dataToSet.role === 'coach') {\n      dataToSet.subscriptionTier = dataToSet.subscriptionTier ?? 'free';\n      dataToSet.status = dataToSet.status ?? 'pending_approval';\n      dataToSet.availability = dataToSet.availability ?? [];\n      dataToSet.isFeaturedOnHomepage = dataToSet.isFeaturedOnHomepage ?? false;\n    }\n  } else {\n    dataToSet.profileImageUrl = profileData.profileImageUrl === undefined ? userSnap.data()?.profileImageUrl : (profileData.profileImageUrl ?? null);\n    dataToSet.location = profileData.location === undefined ? userSnap.data()?.location : (profileData.location ?? null);\n    dataToSet.websiteUrl = profileData.websiteUrl === undefined ? userSnap.data()?.websiteUrl : (profileData.websiteUrl ?? null);\n    dataToSet.introVideoUrl = profileData.introVideoUrl === undefined ? userSnap.data()?.introVideoUrl : (profileData.introVideoUrl ?? null);\n    \n    if (profileData.role === 'coach') { \n        if (profileData.isFeaturedOnHomepage === undefined) {\n            dataToSet.isFeaturedOnHomepage = userSnap.data()?.isFeaturedOnHomepage ?? false;\n        }\n    }\n  }\n  dataToSet.updatedAt = serverTimestamp();\n\n  const cleanData = pruneUndefined(dataToSet);\n\n  await setDoc(userDocRef, cleanData, { merge: !isCreating });\n}\n\nexport async function getUserProfile(userId: string): Promise<FirestoreUserProfile | null> {\n  if (!userId) return null;\n  const userDocRef = doc(db, \"users\", userId);\n  const userSnap = await getDoc(userDocRef);\n  if (userSnap.exists()) {\n    const data = userSnap.data();\n    return {\n      id: userSnap.id,\n      ...data,\n      availability: data.availability || [],\n      isFeaturedOnHomepage: data.role === 'coach' ? (data.isFeaturedOnHomepage || false) : undefined,\n      favoriteCoachIds: data.favoriteCoachIds || [], \n      enableNotifications: data.enableNotifications === undefined ? true : data.enableNotifications,\n    } as FirestoreUserProfile;\n  }\n  return null;\n}\n\nexport async function getAllUserProfilesForAdmin(): Promise<FirestoreUserProfile[]> {\n  const usersRef = collection(db, 'users');\n  const q = query(usersRef, orderBy('createdAt', 'desc'));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnap => {\n    const data = docSnap.data();\n    return {\n      id: docSnap.id,\n      ...data,\n      createdAt: data.createdAt instanceof Timestamp ? data.createdAt.toDate().toISOString() : (data.createdAt || new Date().toISOString()),\n      updatedAt: data.updatedAt instanceof Timestamp ? data.updatedAt.toDate().toISOString() : (data.updatedAt || new Date().toISOString()),\n      isFeaturedOnHomepage: data.role === 'coach' ? (data.isFeaturedOnHomepage || false) : undefined,\n      favoriteCoachIds: data.favoriteCoachIds || [],\n      enableNotifications: data.enableNotifications === undefined ? true : data.enableNotifications,\n    } as FirestoreUserProfile;\n  });\n}\n\nexport async function suspendUserAccount(userId: string): Promise<void> {\n  if (!userId) {\n    throw new Error(\"User ID is required to suspend account.\");\n  }\n  const userDocRef = doc(db, \"users\", userId);\n  await updateDoc(userDocRef, { status: 'suspended' });\n}\n\nexport async function unsuspendUserAccount(userId: string): Promise<void> {\n  if (!userId) {\n    throw new Error(\"User ID is required to unsuspend account.\");\n  }\n  const userDocRef = doc(db, \"users\", userId);\n  await updateDoc(userDocRef, { status: 'active' });\n}\n\n// --- Coach Fetching Functions ---\nexport async function getFeaturedCoaches(count = 3): Promise<Coach[]> {\n  const q = query(\n    collection(db, \"users\"),\n    where(\"role\", \"==\", \"coach\"),\n    where(\"status\", \"==\", \"approved\"),\n    where(\"isFeaturedOnHomepage\", \"==\", true),\n    firestoreLimit(count)\n  );\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => mapCoachFromFirestore(docSnapshot.data(), docSnapshot.id));\n}\n\nexport async function getAllCoaches(filters?: { searchTerm?: string, includeAllStatuses?: boolean }): Promise<Coach[]> {\n  const qConstraints = [where(\"role\", \"==\", \"coach\")];\n  if (!filters?.includeAllStatuses) qConstraints.push(where(\"status\", \"==\", \"approved\"));\n  qConstraints.push(firestoreLimit(50));\n  const coachesQuery = query(collection(db, \"users\"), ...qConstraints);\n  const querySnapshot = await getDocs(coachesQuery);\n  let allCoaches = querySnapshot.docs.map(docSnapshot => mapCoachFromFirestore(docSnapshot.data(), docSnapshot.id));\n  if (filters?.searchTerm) {\n    const lowerSearchTerm = filters.searchTerm.toLowerCase();\n    allCoaches = allCoaches.filter(coach =>\n      coach.name.toLowerCase().includes(lowerSearchTerm) ||\n      (coach.bio && coach.bio.toLowerCase().includes(lowerSearchTerm)) ||\n      (Array.isArray(coach.specialties) && coach.specialties.some(s => s.toLowerCase().includes(lowerSearchTerm))) ||\n      (() => {\n        const keywordsArray = Array.isArray(coach.keywords)\n          ? coach.keywords\n          : (typeof coach.keywords === 'string' ? coach.keywords.split(',').map(k => k.trim()).filter(Boolean) : []);\n        return keywordsArray.some(k => k.toLowerCase().includes(lowerSearchTerm));\n      })()\n    );\n  }\n  return allCoaches;\n}\n\nexport async function getCoachById(coachId: string): Promise<Coach | null> {\n  if (!coachId) return null;\n  const userProfile = await getUserProfile(coachId);\n  if (userProfile && userProfile.role === 'coach') return mapCoachFromFirestore(userProfile, userProfile.id);\n  return null;\n}\n\nexport async function getAllCoachIds(): Promise<string[]> {\n  const q = query(collection(db, \"users\"), where(\"role\", \"==\", \"coach\"), where(\"status\", \"==\", \"approved\"));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => docSnapshot.id);\n}\n\nexport async function updateCoachSubscriptionTier(coachId: string, tier: 'free' | 'premium'): Promise<void> {\n  if (!coachId) throw new Error(\"Coach ID is required.\");\n  await updateDoc(doc(db, \"users\", coachId), {\n    subscriptionTier: tier,\n    updatedAt: serverTimestamp()\n  });\n}\n\nexport async function updateCoachStatus(coachId: string, status: CoachStatus): Promise<void> {\n  if (!coachId) throw new Error(\"Coach ID is required.\");\n  await updateDoc(doc(db, \"users\", coachId), {\n    status: status,\n    updatedAt: serverTimestamp()\n  });\n}\n\nexport async function updateCoachFeatureStatus(coachId: string, isFeatured: boolean): Promise<void> {\n  if (!coachId) {\n    throw new Error(\"Coach ID is required to update feature status.\");\n  }\n  const coachRef = doc(db, \"users\", coachId);\n  await updateDoc(coachRef, {\n    isFeaturedOnHomepage: isFeatured,\n    updatedAt: serverTimestamp()\n  });\n}\n\n// --- Blog Post Functions ---\nexport async function createFirestoreBlogPost(postData: { title: string; content: string; status: 'draft' | 'pending_approval'; authorId: string; authorName: string; excerpt?: string; tags?: string; featuredImageUrl?: string; slug?: string; }): Promise<string> {\n  const blogsCollection = collection(db, \"blogs\");\n  const slug = postData.slug || (postData.title ? postData.title.toLowerCase().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '') : `post-${Date.now()}`);\n  const tagsArray = postData.tags ? postData.tags.split(',').map(tag => tag.trim()).filter(Boolean) : [];\n  const dataToSave: Omit<FirestoreBlogPost, 'id'> = {\n    ...postData,\n    slug,\n    tags: tagsArray,\n    featuredImageUrl: postData.featuredImageUrl || null,\n    createdAt: serverTimestamp() as Timestamp,\n    updatedAt: serverTimestamp() as Timestamp,\n  };\n  const newPostRef = await addDoc(blogsCollection, dataToSave);\n  return newPostRef.id;\n}\n\nexport async function updateFirestoreBlogPost(postId: string, postData: Partial<Omit<FirestoreBlogPost, 'id' | 'createdAt' | 'authorId' | 'authorName' | 'slug'>>) {\n  const dataToUpdate: any = { ...postData, updatedAt: serverTimestamp() };\n  if (postData.tags !== undefined) {\n    dataToUpdate.tags = Array.isArray(postData.tags) ? postData.tags.map(tag => tag.trim()).filter(Boolean) : [];\n  }\n  if (postData.hasOwnProperty('featuredImageUrl')) {\n    dataToUpdate.featuredImageUrl = postData.featuredImageUrl || null;\n  }\n  await updateDoc(doc(db, \"blogs\", postId), dataToUpdate);\n}\n\nexport async function getFirestoreBlogPost(postId: string): Promise<BlogPost | null> {\n  const postDoc = await getDoc(doc(db, \"blogs\", postId));\n  return postDoc.exists() ? mapBlogPostFromFirestore(postDoc.data(), postDoc.id) : null;\n}\n\nexport async function getFirestoreBlogPostBySlug(slug: string): Promise<BlogPost | null> {\n  const q = query(collection(db, \"blogs\"), where(\"slug\", \"==\", slug), firestoreLimit(1));\n  const querySnapshot = await getDocs(q);\n  if (!querySnapshot.empty) return mapBlogPostFromFirestore(querySnapshot.docs[0].data(), querySnapshot.docs[0].id);\n  return null;\n}\n\nexport async function getPublishedBlogPosts(count = 10): Promise<BlogPost[]> {\n  const q = query(collection(db, \"blogs\"), where(\"status\", \"==\", \"published\"), orderBy(\"createdAt\", \"desc\"), firestoreLimit(count));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnap => mapBlogPostFromFirestore(docSnap.data(), docSnap.id));\n}\n\nexport async function getAllPublishedBlogPostSlugs(): Promise<string[]> {\n  const q = query(collection(db, \"blogs\"), where(\"status\", \"==\", \"published\"));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => (docSnapshot.data() as FirestoreBlogPost).slug).filter(Boolean);\n}\n\nexport async function updateBlogPostStatus(postId: string, status: FirestoreBlogPost['status']): Promise<void> {\n  await updateDoc(doc(db, \"blogs\", postId), { status: status, updatedAt: serverTimestamp() });\n}\n\nexport async function deleteFirestoreBlogPost(postId: string): Promise<void> {\n  await deleteDoc(doc(db, \"blogs\", postId));\n}\n\nexport async function getAllBlogPostsForAdmin(count = 50): Promise<BlogPost[]> {\n  const q = query(collection(db, \"blogs\"), orderBy(\"createdAt\", \"desc\"), firestoreLimit(count));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnap => mapBlogPostFromFirestore(docSnap.data(), docSnap.id));\n}\n\nexport async function getMyBlogPosts(authorId: string, count = 50): Promise<BlogPost[]> {\n  if (!authorId) return [];\n  const q = query(collection(db, \"blogs\"), where(\"authorId\", \"==\", authorId), orderBy(\"createdAt\", \"desc\"), firestoreLimit(count));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnap => mapBlogPostFromFirestore(docSnap.data(), docSnap.id));\n}\n\nexport async function getBlogPostsByAuthor(authorId: string, count = 2): Promise<BlogPost[]> {\n  if (!authorId) return [];\n  const q = query(collection(db, \"blogs\"), where(\"authorId\", \"==\", authorId), where(\"status\", \"==\", \"published\"), orderBy(\"createdAt\", \"desc\"), firestoreLimit(count));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnap => mapBlogPostFromFirestore(docSnap.data(), docSnap.id));\n}\n\n// --- Messaging Functions ---\nexport async function sendMessage(messageData: Omit<FirestoreMessage, 'id' | 'timestamp' | 'read' | 'conversationId'>): Promise<string> {\n  if (!messageData.senderId || !messageData.recipientId || !messageData.content || !messageData.senderName || !messageData.recipientName) {\n    throw new Error(\"Sender ID, Recipient ID, content, sender name, and recipient name are required.\");\n  }\n  if (messageData.senderId === messageData.recipientId) throw new Error(\"Sender and recipient cannot be the same person.\");\n  const conversationId = generateConversationId(messageData.senderId, messageData.recipientId);\n  if (conversationId.startsWith('error_invalid_user_ids_for_conv_id')) {\n    throw new Error(\"Failed to send message due to invalid user IDs for conversation ID generation.\");\n  }\n  const messagesCollection = collection(db, \"messages\");\n  const messageToSend: Omit<FirestoreMessage, 'id'> = { ...messageData, conversationId, timestamp: serverTimestamp() as Timestamp, read: false };\n  const newMessageRef = await addDoc(messagesCollection, messageToSend);\n  return newMessageRef.id;\n}\n\nexport async function markMessagesAsRead(messageIdsToMark: string[], currentUserId: string): Promise<void> {\n  if (!messageIdsToMark || messageIdsToMark.length === 0 || !currentUserId) return;\n  const batch = writeBatch(db);\n  let actuallyMarkedCount = 0;\n  for (const messageId of messageIdsToMark) {\n    const messageRef = doc(db, \"messages\", messageId);\n    try {\n      const messageSnap = await getDoc(messageRef);\n      if (messageSnap.exists()) {\n        const messageData = messageSnap.data() as FirestoreMessage;\n        if (messageData.recipientId === currentUserId && !messageData.read) {\n          batch.update(messageRef, { read: true });\n          actuallyMarkedCount++;\n        }\n      }\n    } catch (error) { console.error(\"[markMessagesAsRead] Error processing message ID:\", messageId, error); }\n  }\n  if (actuallyMarkedCount > 0) await batch.commit();\n}\n\nexport async function getMessagesForUser(userId: string, otherPartyId?: string | null, messageLimit = 30): Promise<MessageType[]> {\n  if (!userId) return [];\n  const messagesRef = collection(db, \"messages\");\n  const allMessagesMap = new Map<string, MessageType>();\n  const messageIdsToMarkReadClientSide: string[] = [];\n  const commonQueryParts = [orderBy(\"timestamp\", \"desc\"), firestoreLimit(messageLimit)];\n\n  const sentQueryConstraints = [where(\"senderId\", \"==\", userId), ...commonQueryParts];\n  if (otherPartyId) sentQueryConstraints.splice(1, 0, where(\"recipientId\", \"==\", otherPartyId));\n  const qSent = query(messagesRef, ...sentQueryConstraints);\n  const sentSnapshot = await getDocs(qSent);\n  sentSnapshot.forEach(docSnap => allMessagesMap.set(docSnap.id, mapMessageFromFirestore(docSnap.data(), docSnap.id)));\n\n  const receivedQueryConstraints = [where(\"recipientId\", \"==\", userId), ...commonQueryParts];\n  if (otherPartyId) receivedQueryConstraints.splice(1, 0, where(\"senderId\", \"==\", otherPartyId));\n  const qReceived = query(messagesRef, ...receivedQueryConstraints);\n  const receivedSnapshot = await getDocs(qReceived);\n  receivedSnapshot.forEach(docSnap => {\n    const msg = mapMessageFromFirestore(docSnap.data(), docSnap.id);\n    if (!allMessagesMap.has(docSnap.id)) allMessagesMap.set(docSnap.id, msg);\n    if (otherPartyId && !msg.read && msg.recipientId === userId) messageIdsToMarkReadClientSide.push(msg.id);\n  });\n\n  if (otherPartyId && messageIdsToMarkReadClientSide.length > 0) {\n    markMessagesAsRead(messageIdsToMarkReadClientSide, userId).catch(err => console.error(\"[getMessagesForUser] Background markMessagesAsRead failed:\", err));\n  }\n  const combinedMessages = Array.from(allMessagesMap.values());\n  combinedMessages.sort((a, b) => otherPartyId ? new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime() : new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n  return combinedMessages.slice(0, otherPartyId ? undefined : 50);\n}\n\nexport async function getAllMessagesForAdmin(count = 50): Promise<MessageType[]> {\n  const messagesCollection = collection(db, \"messages\");\n  const q = query(messagesCollection, orderBy(\"timestamp\", \"desc\"), firestoreLimit(count));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => mapMessageFromFirestore(docSnapshot.data(), docSnapshot.id));\n}\n\nexport async function getUserUnreadMessageCount(userId: string): Promise<number> {\n  if (!userId) {\n    console.warn(\"[getUserUnreadMessageCount] No userId provided, returning 0.\");\n    return 0;\n  }\n  try {\n    const messagesRef = collection(db, \"messages\");\n    const q = query(messagesRef, where(\"recipientId\", \"==\", userId), where(\"read\", \"==\", false));\n    const snapshot = await getCountFromServer(q);\n    return snapshot.data().count;\n  } catch (error) {\n    console.error(\"[getUserUnreadMessageCount] Error fetching unread message count for user:\", userId, error);\n    return 0;\n  }\n}\n\n// --- Admin Dashboard Stats ---\nexport async function getPendingCoachCount(): Promise<number> {\n  const coachesRef = collection(db, \"users\");\n  const q = query(coachesRef, where(\"role\", \"==\", \"coach\"), where(\"status\", \"==\", \"pending_approval\"));\n  const snapshot = await getCountFromServer(q);\n  return snapshot.data().count;\n}\n\nexport async function getTotalCoachCount(): Promise<number> {\n  const coachesRef = collection(db, \"users\");\n  const q = query(coachesRef, where(\"role\", \"==\", \"coach\"));\n  const snapshot = await getCountFromServer(q);\n  return snapshot.data().count;\n}\n\nexport async function getTotalUserCount(): Promise<number> {\n  const usersRef = collection(db, \"users\");\n  const snapshot = await getCountFromServer(usersRef);\n  return snapshot.data().count;\n}\n\nexport async function getTotalMessagesCount(): Promise<number> {\n  const messagesRef = collection(db, \"messages\");\n  const snapshot = await getCountFromServer(messagesRef);\n  return snapshot.data().count;\n}\n\nexport async function getTotalBlogPostsCount(): Promise<number> {\n  const blogsRef = collection(db, \"blogs\");\n  const snapshot = await getCountFromServer(blogsRef);\n  return snapshot.data().count;\n}\n\nexport async function getPendingBlogPostCount(): Promise<number> {\n  try {\n    const blogsRef = collection(db, \"blogs\");\n    const q = query(blogsRef, where(\"status\", \"==\", \"pending_approval\"));\n    const snapshot = await getCountFromServer(q);\n    console.log(`[getPendingBlogPostCount] Found ${snapshot.data().count} posts pending approval.`);\n    return snapshot.data().count;\n  } catch (error) {\n    console.error(\"[getPendingBlogPostCount] Error fetching count of pending blog posts:\", error);\n    return 0;\n  }\n}\n\nexport async function getActiveSubscriptionsCount(): Promise<number> {\n  const usersRef = collection(db, \"users\");\n  const q = query(usersRef, where(\"role\", \"==\", \"coach\"), where(\"subscriptionTier\", \"===\", \"premium\")); // Corrected to triple equals for \"premium\"\n  const snapshot = await getCountFromServer(q);\n  return snapshot.data().count;\n}\n\nexport async function getCoachUnreadMessageCount(coachId: string): Promise<number> {\n  if (!coachId) return 0;\n  const messagesRef = collection(db, \"messages\");\n  const q = query(messagesRef, where(\"recipientId\", \"==\", coachId), where(\"read\", \"==\", false));\n  const snapshot = await getCountFromServer(q);\n  return snapshot.data().count;\n}\n\nexport async function getCoachBlogStats(coachId: string): Promise<{ pending: number, published: number }> {\n  if (!coachId) return { pending: 0, published: 0 };\n  const blogsRef = collection(db, \"blogs\");\n  const pendingQuery = query(blogsRef, where(\"authorId\", \"==\", coachId), where(\"status\", \"in\", [\"draft\", \"pending_approval\"]));\n  const pendingSnapshot = await getCountFromServer(pendingQuery);\n  const publishedQuery = query(blogsRef, where(\"authorId\", \"==\", coachId), where(\"status\", \"==\", \"published\"));\n  const publishedSnapshot = await getCountFromServer(publishedQuery);\n  return { pending: pendingSnapshot.data().count, published: publishedSnapshot.data().count };\n}\n\n// --- Favorite Coach Functions ---\nexport async function addCoachToFavorites(userId: string, coachId: string): Promise<void> {\n  if (!userId || !coachId) throw new Error(\"User ID and Coach ID are required.\");\n  const userDocRef = doc(db, \"users\", userId);\n  // Optional: Check if coach exists and is approved before adding\n  // const coachProfile = await getCoachById(coachId);\n  // if (!coachProfile || coachProfile.status !== 'approved') {\n  //   console.warn(`Attempted to favorite a non-existent or non-approved coach (ID: ${coachId}).`);\n  //   return; // Or throw an error\n  // }\n  await updateDoc(userDocRef, {\n    favoriteCoachIds: arrayUnion(coachId),\n    updatedAt: serverTimestamp()\n  });\n}\n\nexport async function removeCoachFromFavorites(userId: string, coachId: string): Promise<void> {\n  if (!userId || !coachId) throw new Error(\"User ID and Coach ID are required.\");\n  const userDocRef = doc(db, \"users\", userId);\n  await updateDoc(userDocRef, {\n    favoriteCoachIds: arrayRemove(coachId),\n    updatedAt: serverTimestamp()\n  });\n}\n\nexport async function getFavoriteCoaches(userId: string): Promise<Coach[]> {\n  if (!userId) return [];\n  const userProfile = await getUserProfile(userId);\n\n  if (!userProfile || !Array.isArray(userProfile.favoriteCoachIds) || userProfile.favoriteCoachIds.length === 0) {\n    return [];\n  }\n\n  const favoriteCoachIds = userProfile.favoriteCoachIds;\n  const coaches: Coach[] = [];\n  const BATCH_SIZE = 30; \n\n  for (let i = 0; i < favoriteCoachIds.length; i += BATCH_SIZE) {\n    const batchIds = favoriteCoachIds.slice(i, i + BATCH_SIZE);\n    if (batchIds.length > 0) {\n      const q = query(\n        collection(db, \"users\"),\n        where(documentId(), \"in\", batchIds), // Changed to use documentId() directly\n        where(\"role\", \"==\", \"coach\"),\n        where(\"status\", \"==\", \"approved\") \n      );\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(docSnapshot => {\n        if (docSnapshot.exists()) {\n          coaches.push(mapCoachFromFirestore(docSnapshot.data(), docSnapshot.id));\n        }\n      });\n    }\n  }\n  return coaches;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/data/mock.ts"],"sourcesContent":["import type { Coach, BlogPost, Testimonial } from '@/types';\n\nexport const mockCoaches: Coach[] = [\n  {\n    id: '1',\n    name: 'Dr. Eleanor Vance',\n    bio: 'Experienced life coach specializing in career transitions and personal growth. Let me help you unlock your potential and find your true path.',\n    specialties: ['Career Coaching', 'Personal Development', 'Mindfulness'],\n    keywords: ['career change', 'growth mindset', 'stress management'],\n    profileImageUrl: 'https://placehold.co/300x300.png',\n    dataAiHint: 'professional woman',\n    certifications: ['Certified Professional Coach (CPC)', 'ICF Accredited'],\n    socialLinks: [{ platform: 'linkedin', url: 'https://linkedin.com/in/eleanorvance' }],\n    location: 'New York, NY',\n    subscriptionTier: 'premium',\n    websiteUrl: 'https://eleanorvancecoaching.com',\n    introVideoUrl: 'https://www.youtube.com/watch?v=dQw4w9WgXcQ', // Example video\n    isFeaturedOnHomepage: false, // New field\n  },\n  {\n    id: '2',\n    name: 'Marcus Chen',\n    bio: 'Helping entrepreneurs and leaders build resilience and achieve peak performance. Over 10 years of experience in executive coaching.',\n    specialties: ['Executive Coaching', 'Leadership', 'Business Strategy'],\n    keywords: ['entrepreneurship', 'performance', 'resilience'],\n    profileImageUrl: null, // Free tier coaches do not have a profile image\n    dataAiHint: 'confident man',\n    certifications: ['Maxwell Leadership Certified Coach'],\n    location: 'San Francisco, CA',\n    subscriptionTier: 'free',\n    isFeaturedOnHomepage: false, // New field\n    // No socialLinks, websiteUrl, or introVideoUrl for free tier\n  },\n  {\n    id: '3',\n    name: 'Aisha Khan',\n    bio: 'Passionate about empowering individuals to overcome obstacles and live a more fulfilling life. Focus on wellness and relationship coaching.',\n    specialties: ['Wellness Coaching', 'Relationship Coaching', 'Stress Management'],\n    keywords: ['well-being', 'healthy relationships', 'anxiety relief'],\n    profileImageUrl: 'https://placehold.co/300x300.png',\n    dataAiHint: 'smiling woman',\n    socialLinks: [{ platform: 'instagram', url: 'https://instagram.com/aishakhancoach' }],\n    location: 'London, UK',\n    subscriptionTier: 'premium',\n    websiteUrl: 'https://aishakhancoaching.com',\n    isFeaturedOnHomepage: false, // New field\n    // No introVideoUrl for this premium coach, to show it's optional\n  },\n];\n\nexport const mockBlogPosts: BlogPost[] = [\n  {\n    id: '1',\n    slug: 'unlocking-your-potential-a-guide-to-personal-growth',\n    title: 'Unlocking Your Potential: A Guide to Personal Growth',\n    content: 'Detailed content about personal growth strategies...',\n    excerpt: 'Discover key strategies to unlock your full potential and embark on a journey of continuous self-improvement.',\n    authorId: '1',\n    authorName: 'Dr. Eleanor Vance',\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    status: 'published',\n    tags: ['Personal Development', 'Growth Mindset'],\n    featuredImageUrl: 'https://placehold.co/600x400.png',\n    dataAiHint: 'inspiration journey',\n  },\n  {\n    id: '2',\n    slug: 'finding-balance-in-a-hectic-world',\n    title: 'Finding Balance in a Hectic World',\n    content: 'Tips and techniques for achieving work-life balance...',\n    excerpt: \"Learn practical tips and techniques to achieve a healthier work-life balance in today's fast-paced environment.\",\n    authorId: '3',\n    authorName: 'Aisha Khan',\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    status: 'published',\n    tags: ['Wellness', 'Stress Management'],\n    featuredImageUrl: 'https://placehold.co/600x400.png',\n    dataAiHint: 'serene landscape',\n  },\n  {\n    id: '3',\n    slug: 'navigating-career-changes-with-confidence',\n    title: 'Navigating Career Changes with Confidence',\n    content: 'How to approach career transitions effectively...',\n    excerpt: 'Gain insights on how to approach career transitions with confidence and make your next move a successful one.',\n    authorId: '1',\n    authorName: 'Dr. Eleanor Vance',\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    status: 'pending_approval',\n    tags: ['Career Coaching', 'Confidence'],\n    featuredImageUrl: 'https://placehold.co/600x400.png',\n    dataAiHint: 'crossroads path',\n  },\n];\n\nexport const mockTestimonials: Testimonial[] = [\n  {\n    id: '1',\n    name: 'Sarah L.',\n    text: 'CoachConnect helped me find the perfect coach who understood my needs. The AI matching was spot on!',\n    imageUrl: 'https://placehold.co/100x100.png',\n    dataAiHint: 'happy person',\n    designation: 'User of CoachConnect',\n  },\n  {\n    id: '2',\n    name: 'John B.',\n    text: \"As a coach, registering on CoachConnect was easy, and I love the platform's modern design and features.\",\n    imageUrl: 'https://placehold.co/100x100.png',\n    dataAiHint: 'professional person',\n    designation: 'Life Coach on CoachConnect',\n  },\n  {\n    id: '3',\n    name: 'Maria G.',\n    text: \"The blog section is full of insightful articles. It's a great resource for anyone interested in personal development.\",\n    imageUrl: 'https://placehold.co/100x100.png',\n    dataAiHint: 'thoughtful person',\n    designation: 'Reader & User',\n  },\n];\n\nexport const allSpecialties: string[] = [\n  'Career Coaching',\n  'Personal Development',\n  'Mindfulness Coaching',\n  'Executive Coaching',\n  'Leadership Coaching',\n  'Business Strategy Coaching',\n  'Wellness Coaching',\n  'Relationship Coaching',\n  'Stress Management Coaching',\n  'Health and Fitness Coaching',\n  'Spiritual Coaching',\n  'Financial Coaching',\n  'Parenting Coaching',\n  'Academic Coaching',\n  'Performance Coaching',\n];\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,cAAuB;IAClC;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,aAAa;YAAC;YAAmB;YAAwB;SAAc;QACvE,UAAU;YAAC;YAAiB;YAAkB;SAAoB;QAClE,iBAAiB;QACjB,YAAY;QACZ,gBAAgB;YAAC;YAAsC;SAAiB;QACxE,aAAa;YAAC;gBAAE,UAAU;gBAAY,KAAK;YAAuC;SAAE;QACpF,UAAU;QACV,kBAAkB;QAClB,YAAY;QACZ,eAAe;QACf,sBAAsB;IACxB;IACA;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,aAAa;YAAC;YAAsB;YAAc;SAAoB;QACtE,UAAU;YAAC;YAAoB;YAAe;SAAa;QAC3D,iBAAiB;QACjB,YAAY;QACZ,gBAAgB;YAAC;SAAqC;QACtD,UAAU;QACV,kBAAkB;QAClB,sBAAsB;IAExB;IACA;QACE,IAAI;QACJ,MAAM;QACN,KAAK;QACL,aAAa;YAAC;YAAqB;YAAyB;SAAoB;QAChF,UAAU;YAAC;YAAc;YAAyB;SAAiB;QACnE,iBAAiB;QACjB,YAAY;QACZ,aAAa;YAAC;gBAAE,UAAU;gBAAa,KAAK;YAAuC;SAAE;QACrF,UAAU;QACV,kBAAkB;QAClB,YAAY;QACZ,sBAAsB;IAExB;CACD;AAEM,MAAM,gBAA4B;IACvC;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,SAAS;QACT,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW,IAAI,OAAO,WAAW;QACjC,WAAW,IAAI,OAAO,WAAW;QACjC,QAAQ;QACR,MAAM;YAAC;YAAwB;SAAiB;QAChD,kBAAkB;QAClB,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,SAAS;QACT,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW,IAAI,OAAO,WAAW;QACjC,WAAW,IAAI,OAAO,WAAW;QACjC,QAAQ;QACR,MAAM;YAAC;YAAY;SAAoB;QACvC,kBAAkB;QAClB,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,SAAS;QACT,SAAS;QACT,UAAU;QACV,YAAY;QACZ,WAAW,IAAI,OAAO,WAAW;QACjC,WAAW,IAAI,OAAO,WAAW;QACjC,QAAQ;QACR,MAAM;YAAC;YAAmB;SAAa;QACvC,kBAAkB;QAClB,YAAY;IACd;CACD;AAEM,MAAM,mBAAkC;IAC7C;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,UAAU;QACV,YAAY;QACZ,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,UAAU;QACV,YAAY;QACZ,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,UAAU;QACV,YAAY;QACZ,aAAa;IACf;CACD;AAEM,MAAM,iBAA2B;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD","debugId":null}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/CoachProfile.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CoachProfile.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CoachProfile.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 994, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/CoachProfile.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CoachProfile.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CoachProfile.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/coach/%5Bid%5D/page.tsx"],"sourcesContent":["import { getUserProfile } from \"@/lib/firestore\";\nimport { mockCoaches } from \"@/data/mock\";\nimport CoachProfile from \"@/components/CoachProfile\"; // Import the new client component\nimport type { Coach, FirestoreTimestamp } from \"@/types\"; // Assuming FirestoreTimestamp is defined in your types\nimport { notFound } from 'next/navigation';\nimport { Timestamp } from 'firebase/firestore'; // Import Timestamp for type checking\n\n// Function to generate static params\nexport async function generateStaticParams() {\n  // You might want to fetch actual coach IDs here if mockCoaches isn't exhaustive\n  // or if you want this to be truly dynamic based on your Firestore data.\n  // For now, using mockCoaches as per original.\n  return mockCoaches.map((coach) => ({\n    id: coach.id,\n  }));\n}\n\ninterface PageProps {\n  params: { id: string }; \n}\n\n// Helper function to check if a value is a Firestore Timestamp\nfunction isFirestoreTimestamp(value: any): value is FirestoreTimestamp {\n  return value && typeof value === 'object' && value.hasOwnProperty('seconds') && value.hasOwnProperty('nanoseconds') && typeof value.toDate === 'function';\n}\n\nexport default async function Page({ params: paramsProp }: PageProps) {\n  const resolvedParams = await paramsProp;\n  const { id } = resolvedParams;\n  \n  console.log(\"[CoachPage] paramsProp (can be a Promise):\", paramsProp);\n  console.log(\"[CoachPage] resolvedParams:\", resolvedParams);\n  console.log(\"[CoachPage] Using id:\", id);\n\n  let coachData: Coach | null | undefined = null;\n\n  try {\n    coachData = await getUserProfile(id);\n    console.log(\"[CoachPage] Fetched coachData from Firestore for id:\", id);\n  } catch (error) {\n    console.error(\"[CoachPage] Failed to fetch profile from Firestore for id:\", id, error);\n  }\n\n  if (!coachData) {\n    console.log(\"[CoachPage] No data from Firestore, falling back to mockCoaches for id:\", id);\n    coachData = mockCoaches.find(c => c.id === id) || null;\n    if (coachData) {\n      console.log(\"[CoachPage] Found coachData in mockCoaches for id:\", id);\n    }\n  }\n\n  if (!coachData) {\n    console.log(\"[CoachPage] Coach data not found for id:\", id, \". Triggering notFound().\");\n    notFound(); \n  }\n\n  // Serialize coachData before passing to Client Component\n  const serializableCoachData: any = { ...coachData };\n\n  if (coachData && isFirestoreTimestamp(coachData.createdAt)) {\n    serializableCoachData.createdAt = coachData.createdAt.toDate().toISOString();\n  }\n  if (coachData && isFirestoreTimestamp(coachData.updatedAt)) {\n    serializableCoachData.updatedAt = coachData.updatedAt.toDate().toISOString();\n  }\n  // You might need to do this for other date fields if they exist e.g. availability\n  // For example, if availability is an array of objects with date/time strings, it might already be serializable.\n  // If availability contains Date objects or Timestamps, they also need serialization.\n  // The current log shows availability as an array of objects with string 'day' and 'time', which is fine.\n\n  console.log(\"[CoachPage] Serializable coachData:\", serializableCoachData);\n\n  return <CoachProfile coachData={serializableCoachData as Coach} coachId={id} />;\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA,sOAAsD,kCAAkC;AAExF;AAAA;;;;;;AAIO,eAAe;IACpB,gFAAgF;IAChF,wEAAwE;IACxE,8CAA8C;IAC9C,OAAO,mHAAA,CAAA,cAAW,CAAC,GAAG,CAAC,CAAC,QAAU,CAAC;YACjC,IAAI,MAAM,EAAE;QACd,CAAC;AACH;AAMA,+DAA+D;AAC/D,SAAS,qBAAqB,KAAU;IACtC,OAAO,SAAS,OAAO,UAAU,YAAY,MAAM,cAAc,CAAC,cAAc,MAAM,cAAc,CAAC,kBAAkB,OAAO,MAAM,MAAM,KAAK;AACjJ;AAEe,eAAe,KAAK,EAAE,QAAQ,UAAU,EAAa;IAClE,MAAM,iBAAiB,MAAM;IAC7B,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,QAAQ,GAAG,CAAC,8CAA8C;IAC1D,QAAQ,GAAG,CAAC,+BAA+B;IAC3C,QAAQ,GAAG,CAAC,yBAAyB;IAErC,IAAI,YAAsC;IAE1C,IAAI;QACF,YAAY,MAAM,CAAA,GAAA,uHAAA,CAAA,iBAAc,AAAD,EAAE;QACjC,QAAQ,GAAG,CAAC,wDAAwD;IACtE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8DAA8D,IAAI;IAClF;IAEA,IAAI,CAAC,WAAW;QACd,QAAQ,GAAG,CAAC,2EAA2E;QACvF,YAAY,mHAAA,CAAA,cAAW,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,OAAO;QAClD,IAAI,WAAW;YACb,QAAQ,GAAG,CAAC,sDAAsD;QACpE;IACF;IAEA,IAAI,CAAC,WAAW;QACd,QAAQ,GAAG,CAAC,4CAA4C,IAAI;QAC5D,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,yDAAyD;IACzD,MAAM,wBAA6B;QAAE,GAAG,SAAS;IAAC;IAElD,IAAI,aAAa,qBAAqB,UAAU,SAAS,GAAG;QAC1D,sBAAsB,SAAS,GAAG,UAAU,SAAS,CAAC,MAAM,GAAG,WAAW;IAC5E;IACA,IAAI,aAAa,qBAAqB,UAAU,SAAS,GAAG;QAC1D,sBAAsB,SAAS,GAAG,UAAU,SAAS,CAAC,MAAM,GAAG,WAAW;IAC5E;IACA,kFAAkF;IAClF,gHAAgH;IAChH,qFAAqF;IACrF,yGAAyG;IAEzG,QAAQ,GAAG,CAAC,uCAAuC;IAEnD,qBAAO,8OAAC,kIAAA,CAAA,UAAY;QAAC,WAAW;QAAgC,SAAS;;;;;;AAC3E","debugId":null}}]
}