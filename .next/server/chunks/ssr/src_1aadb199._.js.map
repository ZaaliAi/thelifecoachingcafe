{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-coach-specialties.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Suggests relevant keywords and specialties based on a coach's bio.\n *\n * - suggestCoachSpecialties - A function that handles the suggestion of coach specialties.\n * - SuggestCoachSpecialtiesInput - The input type for the suggestCoachSpecialties function.\n * - SuggestCoachSpecialtiesOutput - The return type for the suggestCoachSpecialties function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestCoachSpecialtiesInputSchema = z.object({\n  bio: z.string().describe('The bio of the coach.'),\n});\nexport type SuggestCoachSpecialtiesInput = z.infer<\n  typeof SuggestCoachSpecialtiesInputSchema\n>;\n\nconst SuggestCoachSpecialtiesOutputSchema = z.object({\n  keywords: z.array(z.string()).describe('A list of 3-5 concise and relevant keywords derived from the bio, suitable for search and tagging.'),\n  specialties: z\n    .array(z.string())\n    .describe('A list of 2-4 coach specialties derived directly from the services or approaches described in the bio.'),\n});\nexport type SuggestCoachSpecialtiesOutput = z.infer<\n  typeof SuggestCoachSpecialtiesOutputSchema\n>;\n\nexport async function suggestCoachSpecialties(\n  input: SuggestCoachSpecialtiesInput\n): Promise<SuggestCoachSpecialtiesOutput> {\n  console.log(\"AI Flow: suggestCoachSpecialties called with bio:\", input.bio.substring(0, 100) + \"...\");\n  const result = await suggestCoachSpecialtiesFlow(input);\n  console.log(\"AI Flow: suggestCoachSpecialties result:\", result);\n  return result;\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestCoachSpecialtiesPrompt',\n  input: {schema: SuggestCoachSpecialtiesInputSchema},\n  output: {schema: SuggestCoachSpecialtiesOutputSchema},\n  prompt: `You are an AI assistant helping life coaches enhance their profiles by analyzing their biography.\n\nCoach's Biography:\n\"{{{bio}}}\"\n\nBased *solely and exclusively* on the provided Coach's Biography above:\n1. Identify and suggest a list of 3-5 concise and relevant \"keywords\" that accurately reflect the main themes, skills, or target audience mentioned *in the bio*. These keywords should be suitable for search and tagging. Do not invent keywords not supported by the text.\n2. Identify and suggest a list of 2-4 \"specialties\" that the coach seems to focus on, derived *directly* from the services, problems solved, or approaches described *in the bio*. Do not invent specialties not supported by the text.\n\nYour entire response MUST be a single, valid JSON object matching the output schema, containing a 'keywords' array of strings and a 'specialties' array of strings.\nExample of expected JSON output format if the bio discussed career changes and leadership:\n{\n  \"keywords\": [\"career transition\", \"leadership development\", \"executive presence\", \"public speaking\"],\n  \"specialties\": [\"Career Coaching\", \"Executive Coaching\", \"Communication Skills\"]\n}\nIf the bio is too short or uninformative to derive meaningful keywords or specialties, return empty arrays for both. Ensure your response is only the JSON object and nothing else.`,\n});\n\nconst suggestCoachSpecialtiesFlow = ai.defineFlow(\n  {\n    name: 'suggestCoachSpecialtiesFlow',\n    inputSchema: SuggestCoachSpecialtiesInputSchema,\n    outputSchema: SuggestCoachSpecialtiesOutputSchema,\n  },\n  async input => {\n    console.log(\"suggestCoachSpecialtiesFlow: Input bio:\", input.bio.substring(0, 100) + \"...\");\n    const {output, usage} = await prompt(input);\n    console.log(\"suggestCoachSpecialtiesFlow: Raw LLM output:\", output);\n    console.log(\"suggestCoachSpecialtiesFlow: LLM usage:\", usage);\n\n    if (!output || !output.keywords || !output.specialties) {\n        console.warn(\"AI suggestion flow returned malformed or incomplete output for bio:\", input.bio.substring(0,50) + \"...\");\n        return { keywords: [], specialties: [] };\n    }\n    // Ensure results are arrays, even if empty\n    const keywords = Array.isArray(output.keywords) ? output.keywords.filter(k => typeof k === 'string' && k.trim() !== \"\") : [];\n    const specialties = Array.isArray(output.specialties) ? output.specialties.filter(s => typeof s === 'string' && s.trim() !== \"\") : [];\n\n    return { keywords, specialties };\n  }\n);\n\n"],"names":[],"mappings":";;;;;;IA+BsB,0BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/imageUpload.ts"],"sourcesContent":["\n// Removed 'use server'; directive to make this a client-side module\n/**\n * @fileOverview Service for uploading images to Firebase Storage.\n * - uploadProfileImage - Uploads a profile image and returns its download URL.\n */\nimport { ref, uploadBytes, getDownloadURL, deleteObject, StorageError } from 'firebase/storage';\nimport { storage, auth } from '@/lib/firebase'; // Import the initialized storage and auth instances\n\n/**\n * Uploads an image file to Firebase Storage and returns its public URL.\n * This function is intended to be called from the client-side.\n * @param file The image file to upload.\n * @param userId The ID of the user, used for creating a unique path. \n *               It's vital this matches the currently authenticated user's UID for rules to pass.\n * @param existingImageUrl Optional. If provided, the old image at this URL will be deleted.\n * @returns The public URL of the uploaded image.\n */\nexport async function uploadProfileImage(file: File | undefined, userId: string, existingImageUrl?: string | null): Promise<string> {\n  // On the client, auth.currentUser should be available and correct if the user is logged in.\n  // console.log('[imageUpload.ts Client-Side] Auth UID from auth.currentUser:', auth.currentUser?.uid);\n  // console.log('[imageUpload.ts Client-Side] UserID param passed to function:', userId);\n\n  // It's crucial that auth.currentUser?.uid matches the userId param for rules to pass.\n  if (auth.currentUser?.uid !== userId) {\n    console.error('Mismatch between authenticated user and userId parameter. Aborting upload.');\n    throw new Error('User authentication mismatch. Cannot upload image for another user.');\n  }\n\n  if (!userId) {\n    console.error('UploadProfileImage: User ID parameter is required.');\n    throw new Error('User ID parameter is required for image operations.');\n  }\n  \n  if (existingImageUrl && typeof file === 'undefined') {\n    // console.log(`UploadProfileImage: Attempting to delete image as file is undefined: ${existingImageUrl}`);\n    try {\n      const oldImageRef = ref(storage, existingImageUrl); \n      await deleteObject(oldImageRef);\n      // console.log('UploadProfileImage: Image deleted successfully (called with undefined file).');\n      return \"\"; \n    } catch (error: any) {\n      if (error.code !== 'storage/object-not-found') {\n        // console.warn('UploadProfileImage: Could not delete image (called with undefined file):', error.code, error.message);\n        // Keep this console.error for actual deletion failures not related to object-not-found\n        console.error('UploadProfileImage: Error deleting image (when file is undefined):', error);\n        if (error instanceof StorageError) {\n          throw new Error(`Image deletion failed: ${error.code} - ${error.message}`);\n        } \n        throw new Error('Image deletion failed.');\n      }\n      // console.log('UploadProfileImage: Image not found for deletion (called with undefined file), nothing to delete.');\n      return \"\"; \n    }\n  }\n\n  if (!file) {\n    console.error('UploadProfileImage: File is required for uploading.');\n    throw new Error('File is required for uploading.');\n  }\n\n  // console.log(`UploadProfileImage: Attempting to upload for userId: ${userId}, filename: ${file.name}`);\n\n  if (existingImageUrl) {\n    try {\n      // console.log(`UploadProfileImage: Attempting to delete old image before new upload: ${existingImageUrl}`);\n      const oldImageRef = ref(storage, existingImageUrl); \n      await deleteObject(oldImageRef);\n      // console.log('UploadProfileImage: Old profile image deleted successfully before new upload.');\n    } catch (error: any) {\n      if (error.code !== 'storage/object-not-found') {\n        // console.warn('UploadProfileImage: Could not delete old profile image (may not exist or other issue):', error.code, error.message);\n      } else {\n        // console.log('UploadProfileImage: Old profile image not found for deletion, nothing to delete.');\n      }\n    }\n  }\n\n  const filePath = `profile-images/${userId}/${Date.now()}-${file.name}`;\n  const storageRefInstance = ref(storage, filePath); \n\n  try {\n    // console.log(`UploadProfileImage: Uploading to path: ${filePath}`);\n    const snapshot = await uploadBytes(storageRefInstance, file);\n    // console.log('UploadProfileImage: Upload successful!', snapshot.metadata.fullPath);\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    // console.log(`UploadProfileImage: Download URL: ${downloadURL}`);\n    return downloadURL;\n  } catch (error: any) { \n    console.error('UploadProfileImage: Detailed error during profile image upload:', error);\n    if (error instanceof StorageError) { \n       throw new Error(`Image upload failed: ${error.code} - ${error.message}`);\n    } else if (error instanceof Error) {\n      throw new Error(`Image upload failed: ${error.message}`);\n    }\n    throw new Error('Image upload failed due to an unknown error. Please try again.');\n  }\n}\n"],"names":[],"mappings":"AACA,oEAAoE;AACpE;;;CAGC;;;AACD;AAAA;AACA,8MAAgD,oDAAoD;;;AAW7F,eAAe,mBAAmB,IAAsB,EAAE,MAAc,EAAE,gBAAgC;IAC/G,4FAA4F;IAC5F,sGAAsG;IACtG,wFAAwF;IAExF,sFAAsF;IACtF,IAAI,sHAAA,CAAA,OAAI,CAAC,WAAW,EAAE,QAAQ,QAAQ;QACpC,QAAQ,KAAK,CAAC;QACd,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI,CAAC,QAAQ;QACX,QAAQ,KAAK,CAAC;QACd,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI,oBAAoB,OAAO,SAAS,aAAa;QACnD,2GAA2G;QAC3G,IAAI;YACF,MAAM,cAAc,CAAA,GAAA,oLAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,UAAO,EAAE;YACjC,MAAM,CAAA,GAAA,oLAAA,CAAA,eAAY,AAAD,EAAE;YACnB,+FAA+F;YAC/F,OAAO;QACT,EAAE,OAAO,OAAY;YACnB,IAAI,MAAM,IAAI,KAAK,4BAA4B;gBAC7C,uHAAuH;gBACvH,uFAAuF;gBACvF,QAAQ,KAAK,CAAC,sEAAsE;gBACpF,IAAI,iBAAiB,oLAAA,CAAA,eAAY,EAAE;oBACjC,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,MAAM,IAAI,CAAC,GAAG,EAAE,MAAM,OAAO,EAAE;gBAC3E;gBACA,MAAM,IAAI,MAAM;YAClB;YACA,oHAAoH;YACpH,OAAO;QACT;IACF;IAEA,IAAI,CAAC,MAAM;QACT,QAAQ,KAAK,CAAC;QACd,MAAM,IAAI,MAAM;IAClB;IAEA,yGAAyG;IAEzG,IAAI,kBAAkB;QACpB,IAAI;YACF,4GAA4G;YAC5G,MAAM,cAAc,CAAA,GAAA,oLAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,UAAO,EAAE;YACjC,MAAM,CAAA,GAAA,oLAAA,CAAA,eAAY,AAAD,EAAE;QACnB,gGAAgG;QAClG,EAAE,OAAO,OAAY;YACnB,IAAI,MAAM,IAAI,KAAK,4BAA4B;YAC7C,qIAAqI;YACvI,OAAO;YACL,mGAAmG;YACrG;QACF;IACF;IAEA,MAAM,WAAW,CAAC,eAAe,EAAE,OAAO,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,IAAI,EAAE;IACtE,MAAM,qBAAqB,CAAA,GAAA,oLAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,UAAO,EAAE;IAExC,IAAI;QACF,qEAAqE;QACrE,MAAM,WAAW,MAAM,CAAA,GAAA,oLAAA,CAAA,cAAW,AAAD,EAAE,oBAAoB;QACvD,qFAAqF;QACrF,MAAM,cAAc,MAAM,CAAA,GAAA,oLAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,GAAG;QACrD,mEAAmE;QACnE,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,mEAAmE;QACjF,IAAI,iBAAiB,oLAAA,CAAA,eAAY,EAAE;YAChC,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE,MAAM,IAAI,CAAC,GAAG,EAAE,MAAM,OAAO,EAAE;QAC1E,OAAO,IAAI,iBAAiB,OAAO;YACjC,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE,MAAM,OAAO,EAAE;QACzD;QACA,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/stripe.ts"],"sourcesContent":["// src/lib/stripe.ts\nimport { loadStripe, Stripe } from '@stripe/stripe-js';\n\nlet stripePromise: Promise<Stripe | null>;\n\nconst getStripe = (): Promise<Stripe | null> => {\n  if (!stripePromise) {\n    const stripePublicKey = process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY;\n    if (!stripePublicKey) {\n      console.error('Stripe public key is not set. Please set NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY environment variable.');\n      return Promise.resolve(null); // Or throw an error\n    }\n    stripePromise = loadStripe(stripePublicKey);\n  }\n  return stripePromise;\n};\n\nexport default getStripe;\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;AACpB;AAAA;;AAEA,IAAI;AAEJ,MAAM,YAAY;IAChB,IAAI,CAAC,eAAe;QAClB,MAAM;QACN,uCAAsB;;QAGtB;QACA,gBAAgB,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAD,EAAE;IAC7B;IACA,OAAO;AACT;uCAEe","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth/RegisterCoachForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback, type ChangeEvent, useRef } from 'react';\nimport { useForm, Controller, type SubmitHandler, useFieldArray } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Loader2, UserPlus, Lightbulb, X, Crown, CalendarDays, Sparkles, PlusCircle, Image as ImageIcon, UploadCloud, Trash2, KeyRound, LinkIcon, Award, MapPin, Video, Star } from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\nimport { suggestCoachSpecialties, type SuggestCoachSpecialtiesOutput } from '@/ai/flows/suggest-coach-specialties';\nimport { debounce } from 'lodash';\nimport NextImage from 'next/image';\nimport Link from 'next/link';\nimport { useAuth } from '@/lib/auth';\nimport { useRouter } from 'next/navigation';\nimport { uploadProfileImage } from '@/services/imageUpload';\nimport type { FirestoreUserProfile } from '@/types';\nimport { Badge } from '@/components/ui/badge';\nimport getStripe from '@/lib/stripe';\nimport { getFunctions, httpsCallable, Functions } from 'firebase/functions';\nimport { firebaseApp } from '@/lib/firebase';\n\nconst YOUR_DEFAULT_PREMIUM_PRICE_ID = \"price_1RURVlG6UVJU45QN1mByj8Fc\";\nconst LOCAL_STORAGE_KEY = 'registerCoachFormData';\n\ninterface RegisterCoachFormProps {\n  planId?: string | null;\n}\n\nconst availabilitySlotSchema = z.object({\n  day: z.string().min(1, 'Day is required.').max(50, 'Day seems too long.'),\n  time: z.string().min(1, 'Time is required.').max(50, 'Time seems too long.'),\n});\n\nconst coachRegistrationSchema = z.object({\n  name: z.string().min(2, 'Name must be at least 2 characters.'),\n  email: z.string().email('Invalid email address.'),\n  password: z.string().min(8, 'Password must be at least 8 characters.'),\n  confirmPassword: z.string(),\n  bio: z.string().min(50, 'Bio must be at least 50 characters for AI suggestions.').optional().or(z.literal('')),\n  selectedSpecialties: z.array(z.string()).min(1, 'Please select or add at least one specialty.'),\n  keywords: z.string().optional(),\n  certifications: z.string().optional(),\n  location: z.string().optional(),\n  profileImageUrl: z.string().url('Profile image URL must be a valid URL.').optional().or(z.literal('')).nullable(),\n  websiteUrl: z.string().url('Invalid URL for website.').optional().or(z.literal('')),\n  introVideoUrl: z.string().url('Invalid URL for intro video.').optional().or(z.literal('')),\n  socialLinkPlatform: z.string().optional(),\n  socialLinkUrl: z.string().url('Invalid URL for social link.').optional().or(z.literal('')),\n  availability: z.array(availabilitySlotSchema).min(1, \"Please add at least one availability slot.\").optional().default([]),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\ntype CoachRegistrationFormData = z.infer<typeof coachRegistrationSchema>;\n\nexport default function RegisterCoachForm({ planId }: RegisterCoachFormProps) {\n  const router = useRouter();\n  const { registerWithEmailAndPassword, loading: authLoading } = useAuth();\n  const isFreeTier = !planId; // If planId is null, undefined, or an empty string, it's a free tier.\n  const [isAiLoading, setIsAiLoading] = useState(false);\n  const [aiSuggestions, setAiSuggestions] = useState<SuggestCoachSpecialtiesOutput | null>(null);\n  const [customSpecialtyInput, setCustomSpecialtyInput] = useState('');\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [imagePreviewUrl, setImagePreviewUrl] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const [newSlotDay, setNewSlotDay] = useState('');\n  const [newSlotTime, setNewSlotTime] = useState('');\n\n  const getInitialFormValues = () => {\n    try {\n      const upgradeAttempt = localStorage.getItem('coachFormUpgradeAttempt') === 'true';\n      const storedDataString = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n      if (upgradeAttempt) { // If an upgrade was just attempted\n        localStorage.removeItem('coachFormUpgradeAttempt'); // Clear the flag\n        if (storedDataString) {\n          console.log('Loading form data from local storage (upgrade attempt)'); // Debug\n          return JSON.parse(storedDataString);\n        }\n      } else if (!planId && storedDataString) { // If it's free tier (no planId) and data exists\n        console.log('Loading form data from local storage (free tier session)'); // Debug\n        return JSON.parse(storedDataString);\n      }\n    } catch (error) {\n      console.error(\"Error loading/parsing data from local storage:\", error);\n      // Fall through to default if error\n    }\n    // Standard empty default values:\n    return {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      bio: '',\n      selectedSpecialties: [],\n      keywords: '',\n      certifications: '',\n      location: '',\n      profileImageUrl: null, // Ensure this matches Zod schema (optional, nullable)\n      websiteUrl: '',\n      introVideoUrl: '',\n      socialLinkPlatform: '',\n      socialLinkUrl: '',\n      availability: [],\n    };\n  };\n\n  const initialFormValues = getInitialFormValues();\n\n  const {\n    control,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    formState: { errors, isSubmitting },\n  } = useForm<CoachRegistrationFormData>({\n    resolver: zodResolver(coachRegistrationSchema),\n    defaultValues: initialFormValues,\n  });\n\n  const watchedValues = watch(); // Watch all fields\n\n  useEffect(() => {\n    const debouncedSave = debounce((dataToSave) => {\n      if (isFreeTier) {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(dataToSave));\n        console.log('Form data saved to local storage (free tier)'); // For debugging\n      }\n    }, 1000); // Debounce for 1 second\n\n    debouncedSave(watchedValues);\n\n    // Cleanup function for the debounce if the component unmounts or dependencies change\n    return () => {\n      debouncedSave.cancel();\n    };\n  }, [watchedValues, isFreeTier]); // Re-run if watchedValues or isFreeTier changes\n\n  const { fields: availabilityFields, append: appendAvailability, remove: removeAvailability } = useFieldArray({\n    control,\n    name: \"availability\",\n  });\n\n  const bioValue = watch('bio');\n  const currentSelectedSpecialties = watch('selectedSpecialties') || [];\n\n  const handleImageChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setSelectedFile(file);\n      setImagePreviewUrl(URL.createObjectURL(file));\n      setValue('profileImageUrl', '', { shouldValidate: false });\n    }\n  };\n\n  const handleRemoveImage = () => {\n    setSelectedFile(null);\n    setImagePreviewUrl(null);\n    setValue('profileImageUrl', '', { shouldValidate: false });\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const debouncedFetchSuggestions = useCallback(\n    debounce(async (bioText: string) => {\n      if (bioText.length >= 50) {\n        setIsAiLoading(true);\n        setAiSuggestions(null);\n        try {\n          const suggestions = await suggestCoachSpecialties({ bio: bioText });\n          setAiSuggestions(suggestions);\n        } catch (error) {\n          console.error('Error fetching AI suggestions:', error);\n        }\n        setIsAiLoading(false);\n      }\n    }, 1000),\n    [setIsAiLoading, setAiSuggestions]\n  );\n\n  useEffect(() => {\n    if (bioValue && bioValue.length >= 50) {\n      debouncedFetchSuggestions(bioValue);\n    } else {\n      setAiSuggestions(null);\n    }\n  }, [bioValue, debouncedFetchSuggestions]);\n\n  const onSubmit: SubmitHandler<CoachRegistrationFormData> = async (data) => {\n    let finalProfileImageUrl: string | null = data.profileImageUrl || null;\n    let createdUserId: string | null = null;\n\n    try {\n      const { password, confirmPassword, ...profileDetails } = data;\n      let additionalDataForAuth: Partial<FirestoreUserProfile> = {\n        ...profileDetails,\n        planId: planId || undefined,\n        photoURL: null,\n        specialties: data.selectedSpecialties,\n        availability: data.availability,\n      };\n\n      if (selectedFile) {\n        toast({ title: 'Uploading profile image...', description: 'Please wait.' });\n      }\n      \n      const registeredUser = await registerWithEmailAndPassword(\n        data.email,\n        data.password,\n        data.name,\n        'coach',\n        additionalDataForAuth\n      );\n\n      if (!registeredUser || !registeredUser.uid) {\n        throw new Error(\"User registration failed, UID not returned.\");\n      }\n      createdUserId = registeredUser.uid;\n\n      if (selectedFile && createdUserId) {\n        finalProfileImageUrl = await uploadProfileImage(selectedFile, createdUserId, null);\n        console.log(\"Profile image URL after upload (to be updated in Firestore):\", finalProfileImageUrl);\n      }\n      \n      toast({\n        title: 'Registration Successful!',\n        description: 'Your coach account has been created.',\n        variant: 'success',\n      });\n\n      if (planId && createdUserId) {\n        toast({ title: \"Redirecting to subscription...\", description: \"Please wait.\" });\n        const functionsInstance: Functions = getFunctions(firebaseApp);\n        const createCheckoutSession = httpsCallable(functionsInstance, 'createCheckoutSessionCallable');\n        \n        const successUrl = `${window.location.origin}/dashboard/coach/profile?subscription_success=true`;\n        const cancelUrl = `${window.location.origin}/pricing?subscription_cancelled=true`;\n\n        const { data: checkoutData }: any = await createCheckoutSession({\n          priceId: planId,\n          successUrl: successUrl,\n          cancelUrl: cancelUrl,\n          userId: createdUserId,\n        });\n\n        if (checkoutData.error) {\n          throw new Error(checkoutData.error.message || \"Could not create Stripe session after registration.\");\n        }\n\n        if (checkoutData.sessionId) {\n          const stripe = await getStripe();\n          if (stripe) {\n            const { error: stripeError } = await stripe.redirectToCheckout({ sessionId: checkoutData.sessionId });\n            if (stripeError) {\n              throw new Error(stripeError.message || \"Error redirecting to Stripe.\");\n            }\n            return;\n          }\n          throw new Error(\"Stripe.js failed to load.\");\n        }\n        throw new Error(\"No sessionId returned from createCheckoutSessionCallable.\");\n      }\n      // Clear Local Storage after successful operations, before final navigation for non-Stripe path\n      try {\n        localStorage.removeItem(LOCAL_STORAGE_KEY);\n        localStorage.removeItem('coachFormUpgradeAttempt'); // Also clear the upgrade flag\n        console.log('Local storage cleared after successful submission.'); // Debug\n      } catch (error) {\n        console.error(\"Error clearing local storage:\", error);\n        // Non-critical, so don't let this break the flow\n      }\n      router.push('/dashboard/coach/profile');\n    } catch (error: any) {\n      console.error('Error during coach registration process:', error);\n      toast({\n        title: 'Registration Failed',\n        description: error.message || 'There was an error submitting your profile. Please try again.',\n        variant: 'destructive',\n      });\n    }\n  };\n  \n  const addSuggestedKeyword = (keyword: string) => {\n    const currentKeywords = getValues('keywords') || '';\n    const keywordsArray = currentKeywords.split(',').map(k => k.trim()).filter(k => k);\n    if (!keywordsArray.includes(keyword)) {\n      setValue('keywords', [...keywordsArray, keyword].join(', '), { shouldValidate: true });\n    }\n  };\n\n  const addSpecialty = (specialty: string) => {\n    if (specialty.trim() === '') return;\n    const currentSpecialties = getValues('selectedSpecialties') || [];\n    if (!currentSpecialties.includes(specialty.trim())) {\n      setValue('selectedSpecialties', [...currentSpecialties, specialty.trim()], { shouldValidate: true });\n    }\n  };\n\n  const handleAddCustomSpecialty = () => {\n    if (customSpecialtyInput.trim() !== '') {\n      addSpecialty(customSpecialtyInput.trim());\n      setCustomSpecialtyInput('');\n    }\n  };\n\n  const removeSpecialty = (specialtyToRemove: string) => {\n    const currentSpecialties = getValues('selectedSpecialties') || [];\n    setValue('selectedSpecialties', currentSpecialties.filter(s => s !== specialtyToRemove), { shouldValidate: true });\n  };\n\n  const handleAddAvailabilitySlot = () => {\n    if (newSlotDay.trim() && newSlotTime.trim()) {\n      appendAvailability({ day: newSlotDay.trim(), time: newSlotTime.trim() });\n      setNewSlotDay('');\n      setNewSlotTime('');\n    } else {\n      toast({\n        title: \"Missing Information\",\n        description: \"Please enter both day and time for the availability slot.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleUpgradeToPremium = async () => {\n    // Get current form values\n    const currentFormData = getValues(); // getValues() from react-hook-form\n\n    // Save current form data to local storage immediately\n    try {\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(currentFormData));\n      console.log('Form data saved to local storage before upgrade attempt'); // Debug\n    } catch (error) {\n      console.error(\"Error saving data to local storage before upgrade:\", error);\n      // Proceed with navigation even if save fails, but log it.\n    }\n\n    // Set the upgrade attempt flag\n    localStorage.setItem('coachFormUpgradeAttempt', 'true');\n    console.log('Upgrade attempt flag set'); // Debug\n\n    // Navigate to the premium registration page\n    router.push(`/register-coach?planId=${YOUR_DEFAULT_PREMIUM_PRICE_ID}`);\n  };\n\n return (\n    <div className=\"container mx-auto py-12 px-4 sm:px-6 lg:px-8 max-w-3xl bg-background\">\n      <section className=\"mb-12 text-center py-8 px-6 rounded-xl bg-gradient-to-br from-primary/10 to-accent/10 shadow-lg border border-border/20\">\n        <div className=\"flex items-center justify-center mb-4\">\n          <UserPlus className=\"h-12 w-12 text-primary mr-4\" />\n          <h1 className=\"text-4xl font-extrabold tracking-tight text-primary sm:text-5xl\">Register as a Coach</h1>\n        </div>\n        <p className=\"mt-4 text-lg leading-6 text-muted-foreground max-w-xl mx-auto\">\n          Ready to inspire and guide others? Fill out your profile below to join our community of talented coaches.\n          {planId && <span className=\"block mt-2 font-semibold\">You're signing up as a Premium User</span>}\n        </p>\n      </section>\n\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-8\">\n        <Card className=\"shadow-xl border-border/20 overflow-hidden\">\n          <CardHeader className=\"p-6 bg-muted/30 border-b border-border/20 rounded-t-lg\">\n            <CardTitle className=\"flex items-center text-2xl font-semibold text-primary\">\n              <UserPlus className=\"mr-3 h-7 w-7\" /> Personal Information\n            </CardTitle>\n            <CardDescription className=\"mt-1\">Let's start with the basics to create your account.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"p-6 grid gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\" className=\"text-base font-medium\">Full Name</Label>\n              <Controller name=\"name\" control={control} render={({ field }) => <Input id=\"name\" placeholder=\"e.g., Jane Doe\" {...field} className=\"text-base py-2.5\" />} />\n              {errors.name && <p className=\"text-sm text-destructive mt-1\">{errors.name.message}</p>}\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\" className=\"text-base font-medium\">Email Address</Label>\n              <Controller name=\"email\" control={control} render={({ field }) => <Input id=\"email\" type=\"email\" placeholder=\"you@example.com\" {...field} className=\"text-base py-2.5\" />} />\n              {errors.email && <p className=\"text-sm text-destructive mt-1\">{errors.email.message}</p>}\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\" className=\"text-base font-medium\">Password</Label>\n              <Controller name=\"password\" control={control} render={({ field }) => <Input id=\"password\" type=\"password\" placeholder=\"••••••••\" {...field} className=\"text-base py-2.5\" />} />\n              {errors.password && <p className=\"text-sm text-destructive mt-1\">{errors.password.message}</p>}\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"confirmPassword\" className=\"text-base font-medium\">Confirm Password</Label>\n              <Controller name=\"confirmPassword\" control={control} render={({ field }) => <Input id=\"confirmPassword\" type=\"password\" placeholder=\"••••••••\" {...field} className=\"text-base py-2.5\" />} />\n              {errors.confirmPassword && <p className=\"text-sm text-destructive mt-1\">{errors.confirmPassword.message}</p>}\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"shadow-xl border-border/20 overflow-hidden\">\n          <CardHeader className=\"p-6 bg-muted/30 border-b border-border/20 rounded-t-lg\">\n            <CardTitle className=\"flex items-center text-2xl font-semibold text-primary\">\n              <Lightbulb className=\"mr-3 h-7 w-7\" /> Coaching Profile\n            </CardTitle>\n            <CardDescription className=\"mt-1\">Showcase your expertise and unique approach.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"p-6 grid gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"bio\" className=\"text-base font-medium\">Your Bio</Label>\n              <Controller name=\"bio\" control={control} render={({ field }) => (\n                  <Textarea id=\"bio\" placeholder=\"Share your coaching philosophy... (Min 50 characters for AI suggestions)\" {...field} rows={6} className=\"text-base py-2.5\" />\n              )} />\n              {errors.bio && <p className=\"text-sm text-destructive mt-1\">{errors.bio.message}</p>}\n              {isAiLoading && <div className=\"flex items-center text-sm text-muted-foreground mt-3\"><Loader2 className=\"mr-2 h-4 w-4 animate-spin text-primary\" />Analyzing bio...</div>}\n              {aiSuggestions && (\n                <div className=\"mt-4 p-4 border border-dashed border-primary/50 rounded-lg bg-primary/5\">\n                  <div className=\"flex items-center mb-3\"><Sparkles className=\"h-6 w-6 text-primary mr-2\" /><h4 className=\"text-lg font-semibold text-primary\">Smart Suggestions ✨</h4></div>\n                  {aiSuggestions.keywords && aiSuggestions.keywords.length > 0 && (\n                    <div className=\"mb-4\">\n                      <Label className=\"text-base font-medium text-foreground\">Keywords:</Label>\n                      <div className=\"flex flex-wrap gap-2 mt-2\">\n                        {aiSuggestions.keywords.map(k => <Button key={k} type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => addSuggestedKeyword(k)} className=\"bg-background hover:bg-muted\"><PlusCircle className=\"mr-2 h-4 w-4\"/>{k}</Button>)} \n                      </div>\n                    </div>\n                  )}\n                  {aiSuggestions.specialties && aiSuggestions.specialties.length > 0 && (\n                    <div>\n                      <Label className=\"text-base font-medium text-foreground\">Specialties:</Label>\n                      <div className=\"flex flex-wrap gap-2 mt-2\">\n                        {aiSuggestions.specialties.map(s => <Button key={s} type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => addSpecialty(s)} className=\"bg-background hover:bg-muted\"><PlusCircle className=\"mr-2 h-4 w-4\"/>{s}</Button>)} \n                      </div>\n                    </div>\n                  )}\n                  {(aiSuggestions.keywords?.length === 0 && aiSuggestions.specialties?.length === 0) && <p className=\"text-sm text-muted-foreground\">No suggestions. Expand bio.</p>}\n                </div>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"customSpecialtyInput\" className=\"text-base font-medium\">Your Specialties</Label>\n              <p className=\"text-sm text-muted-foreground mb-3\">Add from AI suggestions or type your own. (Min. 1 required)</p>\n              <div className=\"flex flex-wrap gap-2 mb-3 min-h-[2.5rem] p-2 border rounded-md bg-muted/20 items-center\">\n                {currentSelectedSpecialties.length > 0 ? currentSelectedSpecialties.map(s => <Badge key={s} variant=\"secondary\" className=\"text-sm py-1 px-2.5 flex items-center gap-1.5\">{s}<button type=\"button\" onClick={() => removeSpecialty(s)} className=\"rounded-full hover:bg-destructive/20 p-0.5 text-destructive-foreground hover:text-destructive\"><X className=\"h-3.5 w-3.5\" /></button></Badge>) : <span className=\"text-sm text-muted-foreground px-1\">No specialties yet.</span>} \n              </div>\n              <div className=\"flex gap-3 items-center\">\n                <Input id=\"customSpecialtyInput\" placeholder=\"Type specialty & click Add\" value={customSpecialtyInput} onChange={e => setCustomSpecialtyInput(e.target.value)} onKeyDown={e => { if (e.key === 'Enter' && customSpecialtyInput.trim() !== '') { e.preventDefault(); handleAddCustomSpecialty();}}} className=\"text-base py-2.5\" /> \n                <Button type=\"button\" variant=\"outline\" onClick={handleAddCustomSpecialty} disabled={customSpecialtyInput.trim() === ''} className=\"shrink-0\"><PlusCircle className=\"mr-2 h-4 w-4\" /> Add</Button> \n              </div>\n              {errors.selectedSpecialties && <p className=\"text-sm text-destructive mt-1\">{errors.selectedSpecialties.message}</p>}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"keywords\" className=\"text-base font-medium\">Keywords</Label>\n              <Controller name=\"keywords\" control={control} render={({ field }) => <Input id=\"keywords\" placeholder=\"e.g., career change, leadership (comma-separated)\" {...field} className=\"text-base py-2.5\" />} />\n              {errors.keywords && <p className=\"text-sm text-destructive mt-1\">{errors.keywords.message}</p>}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"certifications\" className=\"text-base font-medium flex items-center\"><Award className=\"mr-2 h-5 w-5 text-primary/80\" />Certifications</Label>\n              <Controller name=\"certifications\" control={control} render={({ field }) => <Input id=\"certifications\" placeholder=\"e.g., ICF Certified Coach, NBC-HWC\" {...field} className=\"text-base py-2.5\" />} />\n              {errors.certifications && <p className=\"text-sm text-destructive mt-1\">{errors.certifications.message}</p>}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"location\" className=\"text-base font-medium flex items-center\"><MapPin className=\"mr-2 h-5 w-5 text-primary/80\" />Location</Label>\n              <Controller name=\"location\" control={control} render={({ field }) => <Input id=\"location\" placeholder=\"e.g., New York, USA or Remote\" {...field} className=\"text-base py-2.5\" />} />\n              {errors.location && <p className=\"text-sm text-destructive mt-1\">{errors.location.message}</p>}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-xl border-border/20 overflow-hidden\">\n          <CardHeader className=\"p-6 bg-muted/30 border-b border-border/20 rounded-t-lg\">\n            <CardTitle className=\"flex items-center text-2xl font-semibold text-primary\">\n              <Crown className=\"mr-3 h-7 w-7\" /> Premium Profile Boosters\n            </CardTitle>\n            <CardDescription className=\"mt-1\">Enhance your profile with these additional details.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"p-6 grid gap-6\">\n            <div className=\"space-y-2\">\n                <div className=\"flex items-center\">\n                    <Label htmlFor=\"profileImageUpload\" className=\"text-base font-medium\">Profile Picture</Label>\n                    <Badge variant=\"premium\" className=\"ml-2\"><Star className=\"mr-1 h-3 w-3\" />Premium</Badge>\n                </div>\n                <div className=\"mt-1 flex flex-col items-center space-y-4\">\n                    {imagePreviewUrl ? (\n                    <div className=\"relative w-40 h-40 rounded-full overflow-hidden shadow-md\">\n                        <NextImage src={imagePreviewUrl} alt=\"Profile Preview\" layout=\"fill\" objectFit=\"cover\" />\n                    </div>\n                    ) : (\n                    <div className=\"w-40 h-40 rounded-full bg-muted flex items-center justify-center text-muted-foreground\">\n                        <ImageIcon className=\"w-16 h-16\" />\n                    </div>\n                    )}\n                    <div className=\"flex space-x-3\">\n                    <Button type=\"button\" variant=\"outline\" onClick={() => fileInputRef.current?.click()} disabled={isFreeTier}>\n                        <UploadCloud className=\"mr-2 h-4 w-4\" /> {selectedFile ? 'Change Image' : 'Upload Image'}\n                    </Button>\n                    <input \n                        type=\"file\" \n                        id=\"profileImageUpload\" \n                        className=\"hidden\" \n                        accept=\"image/png, image/jpeg, image/jpg\" \n                        onChange={handleImageChange} \n                        ref={fileInputRef}\n                        disabled={isFreeTier}\n                    />\n                    {!isFreeTier && imagePreviewUrl && (\n                        <Button type=\"button\" variant=\"ghost\" size=\"icon\" onClick={handleRemoveImage} aria-label=\"Remove image\"> \n                        <Trash2 className=\"h-5 w-5 text-destructive\" />\n                        </Button>\n                    )}\n                    </div>\n                    {isFreeTier && (\n                      <div className=\"text-center p-4 mt-3 border border-custom-gold bg-light-gold-bg rounded-md\">\n                        <Crown className=\"h-6 w-6 text-custom-gold mx-auto mb-2\" />\n                        <p className=\"text-sm text-neutral-700 mb-3\">Profile Picture is a Premium Feature.</p>\n                        <Button\n                          type=\"button\"\n                          size=\"sm\"\n                          variant=\"outline\"\n                          className=\"border-custom-gold text-custom-gold hover:bg-custom-gold hover:text-white\"\n                          onClick={handleUpgradeToPremium}\n                        >\n                          Upgrade to Unlock\n                        </Button>\n                      </div>\n                    )}\n                </div>\n                {errors.profileImageUrl && <p className=\"text-sm text-destructive mt-1\">{errors.profileImageUrl.message}</p>}\n                {/* <p className=\"text-xs text-muted-foreground text-center mt-2\">\n                    <span>A professional profile picture significantly increases your visibility. Recommended: Square (1:1), JPG/PNG. Max 2MB.</span>\n                    {!planId && (\n                        <span className=\"ml-1\"> This is a premium feature. <Link href=\"/pricing\" className=\"underline text-primary hover:text-primary/80\">Upgrade to Premium</Link> to enable.</span>\n                    )}\n                </p> */}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"websiteUrl\" className=\"text-base font-medium flex items-center\"><LinkIcon className=\"mr-2 h-5 w-5 text-primary/80\" />Website URL</Label>\n              <Controller name=\"websiteUrl\" control={control} render={({ field }) => <Input id=\"websiteUrl\" type=\"url\" placeholder=\"https://yourwebsite.com\" {...field} className=\"text-base py-2.5\" disabled={isFreeTier} />} />\n              {errors.websiteUrl && <p className=\"text-sm text-destructive mt-1\">{errors.websiteUrl.message}</p>}\n              {isFreeTier && (\n                <div className=\"text-center p-3 mt-2 border border-custom-gold bg-light-gold-bg rounded-md\">\n                  <Sparkles className=\"h-5 w-5 text-custom-gold mx-auto mb-1\" />\n                  <p className=\"text-xs text-neutral-700 mb-2\">Adding a Website URL is a Premium Feature.</p>\n                  <Button\n                    type=\"button\"\n                    size=\"xs\" /* Slightly smaller button for these individual field upgrades */\n                    variant=\"outline\"\n                    className=\"border-custom-gold text-custom-gold hover:bg-custom-gold hover:text-white\"\n                    onClick={handleUpgradeToPremium}\n                  >\n                    Upgrade\n                  </Button>\n                </div>\n              )}\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"introVideoUrl\" className=\"text-base font-medium flex items-center\"><Video className=\"mr-2 h-5 w-5 text-primary/80\" />Intro Video URL (e.g., YouTube, Vimeo)</Label>\n              <Controller name=\"introVideoUrl\" control={control} render={({ field }) => <Input id=\"introVideoUrl\" type=\"url\" placeholder=\"https://youtube.com/yourvideo\" {...field} className=\"text-base py-2.5\" disabled={isFreeTier} />} />\n              {errors.introVideoUrl && <p className=\"text-sm text-destructive mt-1\">{errors.introVideoUrl.message}</p>}\n              {isFreeTier && (\n                <div className=\"text-center p-3 mt-2 border border-custom-gold bg-light-gold-bg rounded-md\">\n                  <Sparkles className=\"h-5 w-5 text-custom-gold mx-auto mb-1\" />\n                  <p className=\"text-xs text-neutral-700 mb-2\">Adding an Intro Video is a Premium Feature.</p>\n                  <Button\n                    type=\"button\"\n                    size=\"xs\" /* Slightly smaller button */\n                    variant=\"outline\"\n                    className=\"border-custom-gold text-custom-gold hover:bg-custom-gold hover:text-white\"\n                    onClick={handleUpgradeToPremium}\n                  >\n                    Upgrade\n                  </Button>\n                </div>\n              )}\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"socialLinkPlatform\" className=\"text-base font-medium\">Social Media Platform</Label>\n                <Controller name=\"socialLinkPlatform\" control={control} render={({ field }) => <Input id=\"socialLinkPlatform\" placeholder=\"e.g., LinkedIn, Twitter\" {...field} className=\"text-base py-2.5\" disabled={isFreeTier} />} />\n                {errors.socialLinkPlatform && <p className=\"text-sm text-destructive mt-1\">{errors.socialLinkPlatform.message}</p>}\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"socialLinkUrl\" className=\"text-base font-medium\">Social Media URL</Label>\n                <Controller name=\"socialLinkUrl\" control={control} render={({ field }) => <Input id=\"socialLinkUrl\" type=\"url\" placeholder=\"https://linkedin.com/in/yourprofile\" {...field} className=\"text-base py-2.5\" disabled={isFreeTier} />} />\n                {errors.socialLinkUrl && <p className=\"text-sm text-destructive mt-1\">{errors.socialLinkUrl.message}</p>}\n              </div>\n              {isFreeTier && (\n                <div className=\"md:col-span-2 text-center p-4 mt-3 border border-custom-gold bg-light-gold-bg rounded-md\">\n                  <LinkIcon className=\"h-6 w-6 text-custom-gold mx-auto mb-2\" />\n                  <p className=\"text-sm text-neutral-700 mb-3\">Adding Social Media Links is a Premium Feature.</p>\n                  <Button\n                    type=\"button\"\n                    size=\"sm\"\n                    variant=\"outline\"\n                    className=\"border-custom-gold text-custom-gold hover:bg-custom-gold hover:text-white\"\n                    onClick={handleUpgradeToPremium}\n                  >\n                    Upgrade to Unlock\n                  </Button>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-xl border-border/20 overflow-hidden\">\n          <CardHeader className=\"p-6 bg-muted/30 border-b border-border/20 rounded-t-lg\">\n            <CardTitle className=\"flex items-center text-2xl font-semibold text-primary\">\n              <CalendarDays className=\"mr-3 h-7 w-7\" /> Your Availability\n            </CardTitle>\n            <CardDescription className=\"mt-1\">{'Let clients know when you&apos;re available. You can update your availability anytime in Coach dashboard'}</CardDescription>\n          </CardHeader>\n          <CardContent className=\"p-6 grid gap-6\">\n            <div className=\"space-y-4\">\n              {availabilityFields.map((field, index) => (\n                <div key={field.id} className=\"flex items-end gap-3 p-3 border rounded-md bg-muted/20\">\n                  <div className=\"flex-1 space-y-1.5\">\n                    <Label htmlFor={`availability.${index}.day`} className=\"text-sm font-medium\">Day</Label>\n                    <Controller\n                      name={`availability.${index}.day` as const}\n                      control={control}\n                      render={({ field }) => <Input placeholder=\"e.g., Monday\" {...field} className=\"text-base\" />}\n                    />\n                    {errors.availability?.[index]?.day && \n                      <p className=\"text-sm text-destructive\">{errors.availability[index]?.day?.message}</p>}\n                  </div>\n                  <div className=\"flex-1 space-y-1.5\">\n                    <Label htmlFor={`availability.${index}.time`} className=\"text-sm font-medium\">Time Slot</Label>\n                    <Controller\n                      name={`availability.${index}.time` as const}\n                      control={control}\n                      render={({ field }) => <Input placeholder=\"e.g., 9am - 5pm\" {...field} className=\"text-base\" />}\n                    />\n                    {errors.availability?.[index]?.time && \n                      <p className=\"text-sm text-destructive\">{errors.availability[index]?.time?.message}</p>}\n                  </div>\n                  <Button type=\"button\" variant=\"ghost\" size=\"icon\" onClick={() => removeAvailability(index)} className=\"text-destructive hover:bg-destructive/10\">\n                    <Trash2 className=\"h-5 w-5\" />\n                  </Button>\n                </div>\n              ))}\n            </div>\n            <div className=\"flex items-end gap-3 mt-4 pt-4 border-t border-border/20\">\n                <div className=\"flex-1 space-y-1.5\">\n                    <Label htmlFor=\"newSlotDay\" className=\"text-sm font-medium\">New Day</Label>\n                    <Input id=\"newSlotDay\" placeholder=\"e.g., Wednesday\" value={newSlotDay} onChange={(e) => setNewSlotDay(e.target.value)} className=\"text-base\"/>\n                </div>\n                <div className=\"flex-1 space-y-1.5\">\n                    <Label htmlFor=\"newSlotTime\" className=\"text-sm font-medium\">New Time Slot</Label>\n                    <Input id=\"newSlotTime\" placeholder=\"e.g., 10am - 2pm\" value={newSlotTime} onChange={(e) => setNewSlotTime(e.target.value)} className=\"text-base\"/>\n                </div>\n              <Button type=\"button\" variant=\"outline\" onClick={handleAddAvailabilitySlot} className=\"whitespace-nowrap shrink-0\">\n                <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Slot\n              </Button>\n            </div>\n            {errors.availability && typeof errors.availability === 'object' && 'message' in errors.availability && (\n                <p className=\"text-sm text-destructive mt-2\">{errors.availability.message}</p>\n            )}\n          </CardContent>\n        </Card>\n\n        <Button type=\"submit\" className=\"w-full py-3 text-lg font-semibold tracking-wide shadow-lg hover:shadow-xl transition-shadow duration-200 ease-in-out\" disabled={isSubmitting || authLoading || isAiLoading} size=\"lg\">\n          {isSubmitting || authLoading ? <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" /> : <UserPlus className=\"mr-2 h-5 w-5\" />}\n          {isSubmitting || authLoading ? 'Processing Registration...' : (isFreeTier ? 'Create Free Account' : 'Create Account & Proceed to Payment')}\n        </Button>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2393, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/register-coach/page.tsx"],"sourcesContent":["'use client';\n\nimport { Suspense } from 'react';\nimport RegisterCoachForm from '@/components/auth/RegisterCoachForm';\nimport { Loader2 } from 'lucide-react';\nimport { useSearchParams } from 'next/navigation';\n\nfunction RegisterCoachPageContent() {\n  const searchParams = useSearchParams();\n  const planId = searchParams.get('planId');\n\n  return <RegisterCoachForm planId={planId} />;\n}\n\nexport default function RegisterCoachPage() {\n  return (\n    <Suspense fallback={<div className=\"flex items-center justify-center h-screen\"><Loader2 className=\"h-12 w-12 animate-spin text-primary\" /></div>}>\n      <RegisterCoachPageContent />\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,SAAS;IACP,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,aAAa,GAAG,CAAC;IAEhC,qBAAO,8OAAC,+IAAA,CAAA,UAAiB;QAAC,QAAQ;;;;;;AACpC;AAEe,SAAS;IACtB,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBAAU,8OAAC;YAAI,WAAU;sBAA4C,cAAA,8OAAC,iNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;;;;;;kBAChG,cAAA,8OAAC;;;;;;;;;;AAGP","debugId":null}}]
}